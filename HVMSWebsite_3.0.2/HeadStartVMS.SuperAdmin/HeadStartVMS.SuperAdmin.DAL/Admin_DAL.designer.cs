#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace METAOPTION
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HeadStartVMS_24Feb")]
	public partial class Admin_DALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSecurityUser(SecurityUser instance);
    partial void UpdateSecurityUser(SecurityUser instance);
    partial void DeleteSecurityUser(SecurityUser instance);
    partial void InsertDealer(Dealer instance);
    partial void UpdateDealer(Dealer instance);
    partial void DeleteDealer(Dealer instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertEntityType(EntityType instance);
    partial void UpdateEntityType(EntityType instance);
    partial void DeleteEntityType(EntityType instance);
    partial void InsertBuyer(Buyer instance);
    partial void UpdateBuyer(Buyer instance);
    partial void DeleteBuyer(Buyer instance);
    partial void InsertEngine(Engine instance);
    partial void UpdateEngine(Engine instance);
    partial void DeleteEngine(Engine instance);
    partial void InsertWheelDrive(WheelDrive instance);
    partial void UpdateWheelDrive(WheelDrive instance);
    partial void DeleteWheelDrive(WheelDrive instance);
    partial void InsertVendorType(VendorType instance);
    partial void UpdateVendorType(VendorType instance);
    partial void DeleteVendorType(VendorType instance);
    partial void InsertVendorCategory(VendorCategory instance);
    partial void UpdateVendorCategory(VendorCategory instance);
    partial void DeleteVendorCategory(VendorCategory instance);
    partial void InsertTran(Tran instance);
    partial void UpdateTran(Tran instance);
    partial void DeleteTran(Tran instance);
    partial void InsertTitle(Title instance);
    partial void UpdateTitle(Title instance);
    partial void DeleteTitle(Title instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertPaymentTerm(PaymentTerm instance);
    partial void UpdatePaymentTerm(PaymentTerm instance);
    partial void DeletePaymentTerm(PaymentTerm instance);
    partial void InsertPayementFrequency(PayementFrequency instance);
    partial void UpdatePayementFrequency(PayementFrequency instance);
    partial void DeletePayementFrequency(PayementFrequency instance);
    partial void InsertJobTitle(JobTitle instance);
    partial void UpdateJobTitle(JobTitle instance);
    partial void DeleteJobTitle(JobTitle instance);
    partial void InsertDealerType(DealerType instance);
    partial void UpdateDealerType(DealerType instance);
    partial void DeleteDealerType(DealerType instance);
    partial void InsertDealerSource(DealerSource instance);
    partial void UpdateDealerSource(DealerSource instance);
    partial void DeleteDealerSource(DealerSource instance);
    partial void InsertDealerCategory(DealerCategory instance);
    partial void UpdateDealerCategory(DealerCategory instance);
    partial void DeleteDealerCategory(DealerCategory instance);
    partial void InsertContactType(ContactType instance);
    partial void UpdateContactType(ContactType instance);
    partial void DeleteContactType(ContactType instance);
    partial void InsertCompanyCategory(CompanyCategory instance);
    partial void UpdateCompanyCategory(CompanyCategory instance);
    partial void DeleteCompanyCategory(CompanyCategory instance);
    partial void InsertCommissionType(CommissionType instance);
    partial void UpdateCommissionType(CommissionType instance);
    partial void DeleteCommissionType(CommissionType instance);
    partial void InsertCommissionTerm(CommissionTerm instance);
    partial void UpdateCommissionTerm(CommissionTerm instance);
    partial void DeleteCommissionTerm(CommissionTerm instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertSecurityGroupRight(SecurityGroupRight instance);
    partial void UpdateSecurityGroupRight(SecurityGroupRight instance);
    partial void DeleteSecurityGroupRight(SecurityGroupRight instance);
    partial void InsertSecurityRight(SecurityRight instance);
    partial void UpdateSecurityRight(SecurityRight instance);
    partial void DeleteSecurityRight(SecurityRight instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertUtilityCompany(UtilityCompany instance);
    partial void UpdateUtilityCompany(UtilityCompany instance);
    partial void DeleteUtilityCompany(UtilityCompany instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployeeType(EmployeeType instance);
    partial void UpdateEmployeeType(EmployeeType instance);
    partial void DeleteEmployeeType(EmployeeType instance);
    partial void InsertSecurityGroup(SecurityGroup instance);
    partial void UpdateSecurityGroup(SecurityGroup instance);
    partial void DeleteSecurityGroup(SecurityGroup instance);
    partial void InsertLoginHistory(LoginHistory instance);
    partial void UpdateLoginHistory(LoginHistory instance);
    partial void DeleteLoginHistory(LoginHistory instance);
    partial void InsertLookupTable(LookupTable instance);
    partial void UpdateLookupTable(LookupTable instance);
    partial void DeleteLookupTable(LookupTable instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertGroupStatus(GroupStatus instance);
    partial void UpdateGroupStatus(GroupStatus instance);
    partial void DeleteGroupStatus(GroupStatus instance);
    partial void InsertOrganisation(Organisation instance);
    partial void UpdateOrganisation(Organisation instance);
    partial void DeleteOrganisation(Organisation instance);
    #endregion
		
		public Admin_DALDataContext() : 
				base(global::METAOPTION.DAL.Properties.Settings.Default.HVMSRapidConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Admin_DALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Admin_DALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Admin_DALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Admin_DALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SecurityUser> SecurityUsers
		{
			get
			{
				return this.GetTable<SecurityUser>();
			}
		}
		
		public System.Data.Linq.Table<Dealer> Dealers
		{
			get
			{
				return this.GetTable<Dealer>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<EntityType> EntityTypes
		{
			get
			{
				return this.GetTable<EntityType>();
			}
		}
		
		public System.Data.Linq.Table<Buyer> Buyers
		{
			get
			{
				return this.GetTable<Buyer>();
			}
		}
		
		public System.Data.Linq.Table<Engine> Engines
		{
			get
			{
				return this.GetTable<Engine>();
			}
		}
		
		public System.Data.Linq.Table<WheelDrive> WheelDrives
		{
			get
			{
				return this.GetTable<WheelDrive>();
			}
		}
		
		public System.Data.Linq.Table<VendorType> VendorTypes
		{
			get
			{
				return this.GetTable<VendorType>();
			}
		}
		
		public System.Data.Linq.Table<VendorCategory> VendorCategories
		{
			get
			{
				return this.GetTable<VendorCategory>();
			}
		}
		
		public System.Data.Linq.Table<Tran> Trans
		{
			get
			{
				return this.GetTable<Tran>();
			}
		}
		
		public System.Data.Linq.Table<Title> Titles
		{
			get
			{
				return this.GetTable<Title>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTerm> PaymentTerms
		{
			get
			{
				return this.GetTable<PaymentTerm>();
			}
		}
		
		public System.Data.Linq.Table<PayementFrequency> PayementFrequencies
		{
			get
			{
				return this.GetTable<PayementFrequency>();
			}
		}
		
		public System.Data.Linq.Table<JobTitle> JobTitles
		{
			get
			{
				return this.GetTable<JobTitle>();
			}
		}
		
		public System.Data.Linq.Table<DealerType> DealerTypes
		{
			get
			{
				return this.GetTable<DealerType>();
			}
		}
		
		public System.Data.Linq.Table<DealerSource> DealerSources
		{
			get
			{
				return this.GetTable<DealerSource>();
			}
		}
		
		public System.Data.Linq.Table<DealerCategory> DealerCategories
		{
			get
			{
				return this.GetTable<DealerCategory>();
			}
		}
		
		public System.Data.Linq.Table<ContactType> ContactTypes
		{
			get
			{
				return this.GetTable<ContactType>();
			}
		}
		
		public System.Data.Linq.Table<CompanyCategory> CompanyCategories
		{
			get
			{
				return this.GetTable<CompanyCategory>();
			}
		}
		
		public System.Data.Linq.Table<CommissionType> CommissionTypes
		{
			get
			{
				return this.GetTable<CommissionType>();
			}
		}
		
		public System.Data.Linq.Table<CommissionTerm> CommissionTerms
		{
			get
			{
				return this.GetTable<CommissionTerm>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<SecurityGroupRight> SecurityGroupRights
		{
			get
			{
				return this.GetTable<SecurityGroupRight>();
			}
		}
		
		public System.Data.Linq.Table<SecurityRight> SecurityRights
		{
			get
			{
				return this.GetTable<SecurityRight>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<UtilityCompany> UtilityCompanies
		{
			get
			{
				return this.GetTable<UtilityCompany>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeType> EmployeeTypes
		{
			get
			{
				return this.GetTable<EmployeeType>();
			}
		}
		
		public System.Data.Linq.Table<SecurityGroup> SecurityGroups
		{
			get
			{
				return this.GetTable<SecurityGroup>();
			}
		}
		
		public System.Data.Linq.Table<LoginHistory> LoginHistories
		{
			get
			{
				return this.GetTable<LoginHistory>();
			}
		}
		
		public System.Data.Linq.Table<LookupTable> LookupTables
		{
			get
			{
				return this.GetTable<LookupTable>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<GroupStatus> GroupStatus
		{
			get
			{
				return this.GetTable<GroupStatus>();
			}
		}
		
		public System.Data.Linq.Table<Organisation> Organisations
		{
			get
			{
				return this.GetTable<Organisation>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetOrganisation")]
		public ISingleResult<GetOrganisationResult> GetOrganisation()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetOrganisationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BuyerDetailsInsert")]
		public int BuyerDetailsInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuyerId", DbType="BigInt")] ref System.Nullable<long> buyerId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleId", DbType="Int")] System.Nullable<int> titleId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(100)")] string firstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiddleName", DbType="NVarChar(50)")] string middleName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(100)")] string lastName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuyerCode", DbType="NVarChar(50)")] string buyerCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaxIdNumber", DbType="NVarChar(50)")] string taxIdNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentTermId", DbType="Int")] System.Nullable<int> paymentTermId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommissionTypeId", DbType="Int")] System.Nullable<int> commissionTypeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommissionValue", DbType="Decimal(18,2)")] System.Nullable<decimal> commissionValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateSalesmanLicenseNumber", DbType="NVarChar(50)")] string stateSalesmanLicenseNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LicensePlateNumber", DbType="NVarChar(50)")] string licensePlateNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellPhone", DbType="NVarChar(50)")] string cellPhone, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommissionTermId", DbType="Int")] System.Nullable<int> commissionTermId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comments", DbType="NVarChar(255)")] string comments, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddedBy", DbType="BigInt")] System.Nullable<long> addedBy, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDirectBuyer", DbType="Bit")] System.Nullable<bool> isDirectBuyer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentBuyer", DbType="BigInt")] System.Nullable<long> parentBuyer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccessLevel", DbType="SmallInt")] System.Nullable<short> accessLevel, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street", DbType="NVarChar(50)")] string street, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suite", DbType="NVarChar(50)")] string suite, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateId", DbType="Int")] System.Nullable<int> stateId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="Int")] System.Nullable<int> countryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="NVarChar(50)")] string zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1", DbType="NVarChar(50)")] string phone1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1Ext", DbType="NVarChar(50)")] string phone1Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2", DbType="NVarChar(50)")] string phone2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2Ext", DbType="NVarChar(50)")] string phone2Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="NVarChar(50)")] string fax, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email1", DbType="NVarChar(50)")] string email1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email2", DbType="NVarChar(50)")] string email2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), buyerId, titleId, firstName, middleName, lastName, buyerCode, taxIdNumber, paymentTermId, commissionTypeId, commissionValue, stateSalesmanLicenseNumber, licensePlateNumber, cellPhone, commissionTermId, comments, addedBy, orgID, isDirectBuyer, parentBuyer, accessLevel, street, suite, city, stateId, countryId, zip, phone1, phone1Ext, phone2, phone2Ext, fax, email1, email2);
			buyerId = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Buyer_DirectBuyerList")]
		public ISingleResult<Buyer_DirectBuyerListResult> Buyer_DirectBuyerList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID);
			return ((ISingleResult<Buyer_DirectBuyerListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BuyerCode_CheckAvailability")]
		public ISingleResult<BuyerCode_CheckAvailabilityResult> BuyerCode_CheckAvailability([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuyerCode", DbType="NVarChar(50)")] string buyerCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), buyerCode);
			return ((ISingleResult<BuyerCode_CheckAvailabilityResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Group_Delete")]
		public int Group_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupId", DbType="BigInt")] System.Nullable<long> groupId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupId, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SecurityGroupUpdate")]
		public int SecurityGroupUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupId", DbType="BigInt")] System.Nullable<long> securityGroupId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupName", DbType="NVarChar(50)")] string groupName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupDesc", DbType="NVarChar(255)")] string groupDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModifiedBy", DbType="BigInt")] System.Nullable<long> modifiedBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), securityGroupId, groupName, groupDesc, modifiedBy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAssociatedRightsWithGroup")]
		public ISingleResult<GetAssociatedRightsWithGroupResult> GetAssociatedRightsWithGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupId", DbType="BigInt")] System.Nullable<long> groupId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupId);
			return ((ISingleResult<GetAssociatedRightsWithGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUserOrRightFromGroup")]
		public int DeleteUserOrRightFromGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mode", DbType="Int")] System.Nullable<int> mode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mode, iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCountryList")]
		public ISingleResult<GetCountryListResult> GetCountryList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetCountryListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStates")]
		public ISingleResult<GetStatesResult> GetStates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="Int")] System.Nullable<int> countryId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), countryId);
			return ((ISingleResult<GetStatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update_Password")]
		public int Update_Password([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReturnEntityTypeID", DbType="Int")] ref System.Nullable<int> returnEntityTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> securityuserid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string updatepassword, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> modifiedBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), returnEntityTypeID, securityuserid, updatepassword, modifiedBy);
			returnEntityTypeID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CustomerDealerInsert")]
		public int CustomerDealerInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerId", DbType="BigInt")] ref System.Nullable<long> dealerId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerName", DbType="NVarChar(50)")] string dealerName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerDIN", DbType="NVarChar(50)")] string dealerDIN, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerTypeId", DbType="Int")] System.Nullable<int> dealerTypeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerCategoryId", DbType="Int")] System.Nullable<int> dealerCategoryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerSourceId", DbType="Int")] System.Nullable<int> dealerSourceId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comment", DbType="NVarChar(255)")] string comment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreferenceSettings", DbType="Bit")] System.Nullable<bool> preferenceSettings, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveSms", DbType="Bit")] System.Nullable<bool> receiveSms, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveEmail", DbType="Bit")] System.Nullable<bool> receiveEmail, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AuctionAccessNo", DbType="NVarChar(20)")] string auctionAccessNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddedBy", DbType="BigInt")] System.Nullable<long> addedBy, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street", DbType="NVarChar(50)")] string street, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suite", DbType="NVarChar(50)")] string suite, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateId", DbType="Int")] System.Nullable<int> stateId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="Int")] System.Nullable<int> countryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="NVarChar(50)")] string zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1", DbType="NVarChar(50)")] string phone1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1Ext", DbType="NVarChar(50)")] string phone1Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2", DbType="NVarChar(50)")] string phone2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2Ext", DbType="NVarChar(50)")] string phone2Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="NVarChar(50)")] string fax, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email1", DbType="NVarChar(50)")] string email1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email2", DbType="NVarChar(50)")] string email2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dealerId, dealerName, dealerDIN, dealerTypeId, dealerCategoryId, dealerSourceId, comment, preferenceSettings, receiveSms, receiveEmail, auctionAccessNo, addedBy, orgID, street, suite, city, stateId, countryId, zip, phone1, phone1Ext, phone2, phone2Ext, fax, email1, email2);
			dealerId = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DealerFranchiseInsert")]
		public int DealerFranchiseInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FranchiseId", DbType="Int")] System.Nullable<int> franchiseId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerId", DbType="BigInt")] System.Nullable<long> dealerId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), franchiseId, dealerId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMakeList")]
		public ISingleResult<GetMakeListResult> GetMakeList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetMakeListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMakeInYearRange")]
		public ISingleResult<GetMakeInYearRangeResult> GetMakeInYearRange([global::System.Data.Linq.Mapping.ParameterAttribute(Name="YearFrom", DbType="Int")] System.Nullable<int> yearFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="YearTo", DbType="Int")] System.Nullable<int> yearTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), yearFrom, yearTo);
			return ((ISingleResult<GetMakeInYearRangeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VendorDetailsInsert")]
		public int VendorDetailsInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorId", DbType="BigInt")] ref System.Nullable<long> vendorId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorName", DbType="VarChar(50)")] string vendorName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorDIN", DbType="VarChar(50)")] string vendorDIN, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorCategoryId", DbType="Int")] System.Nullable<int> vendorCategoryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaxIdNo", DbType="VarChar(50)")] string taxIdNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorTypeId", DbType="Int")] System.Nullable<int> vendorTypeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentTermId", DbType="Int")] System.Nullable<int> paymentTermId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comments", DbType="VarChar(200)")] string comments, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddedBy", DbType="BigInt")] System.Nullable<long> addedBy, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransExpenseCalculationMethod", DbType="SmallInt")] System.Nullable<short> transExpenseCalculationMethod, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street", DbType="NVarChar(50)")] string street, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suite", DbType="NVarChar(50)")] string suite, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateId", DbType="Int")] System.Nullable<int> stateId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="Int")] System.Nullable<int> countryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="NVarChar(50)")] string zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1", DbType="NVarChar(50)")] string phone1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1Ext", DbType="NVarChar(50)")] string phone1Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2", DbType="NVarChar(50)")] string phone2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2Ext", DbType="NVarChar(50)")] string phone2Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="NVarChar(50)")] string fax, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email1", DbType="NVarChar(50)")] string email1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email2", DbType="NVarChar(50)")] string email2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorId, vendorName, vendorDIN, vendorCategoryId, taxIdNo, vendorTypeId, paymentTermId, comments, addedBy, transExpenseCalculationMethod, orgID, street, suite, city, stateId, countryId, zip, phone1, phone1Ext, phone2, phone2Ext, fax, email1, email2);
			vendorId = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UtilityCompanyInsert")]
		public int UtilityCompanyInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UtilityCompanyId", DbType="BigInt")] ref System.Nullable<long> utilityCompanyId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyName", DbType="NVarChar(100)")] string companyName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaxIdNumber", DbType="NVarChar(50)")] string taxIdNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyCategoryId", DbType="Int")] System.Nullable<int> companyCategoryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PayementFrequencyId", DbType="Int")] System.Nullable<int> payementFrequencyId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="VarChar(25)")] string accountNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comments", DbType="VarChar(200)")] string comments, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddedBy", DbType="BigInt")] System.Nullable<long> addedBy, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street", DbType="NVarChar(50)")] string street, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suite", DbType="NVarChar(50)")] string suite, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateId", DbType="Int")] System.Nullable<int> stateId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="Int")] System.Nullable<int> countryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="NVarChar(50)")] string zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1", DbType="NVarChar(50)")] string phone1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1Ext", DbType="NVarChar(50)")] string phone1Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2", DbType="NVarChar(50)")] string phone2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2Ext", DbType="NVarChar(50)")] string phone2Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="NVarChar(50)")] string fax, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email1", DbType="NVarChar(50)")] string email1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email2", DbType="NVarChar(50)")] string email2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), utilityCompanyId, companyName, taxIdNumber, companyCategoryId, payementFrequencyId, accountNumber, comments, addedBy, orgID, street, suite, city, stateId, countryId, zip, phone1, phone1Ext, phone2, phone2Ext, fax, email1, email2);
			utilityCompanyId = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EmployeeInsert")]
		public int EmployeeInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="BigInt")] ref System.Nullable<long> employeeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleId", DbType="Int")] System.Nullable<int> titleId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(50)")] string firstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiddleName", DbType="NVarChar(50)")] string middleName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(50)")] string lastName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeTypeId", DbType="Int")] System.Nullable<int> employeeTypeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellPhone", DbType="NVarChar(50)")] string cellPhone, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverLicenseStateId", DbType="Int")] System.Nullable<int> driverLicenseStateId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverLicenseNumber", DbType="NVarChar(50)")] string driverLicenseNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverLicensExpDate", DbType="DateTime")] System.Nullable<System.DateTime> driverLicensExpDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SpecialPayrollConditions", DbType="NText")] string specialPayrollConditions, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street", DbType="NVarChar(50)")] string street, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suite", DbType="NVarChar(50)")] string suite, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateId", DbType="Int")] System.Nullable<int> stateId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="Int")] System.Nullable<int> countryId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="NVarChar(50)")] string zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1", DbType="NVarChar(50)")] string phone1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone1Ext", DbType="NVarChar(50)")] string phone1Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2", DbType="NVarChar(50)")] string phone2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone2Ext", DbType="NVarChar(50)")] string phone2Ext, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="NVarChar(50)")] string fax, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email1", DbType="NVarChar(50)")] string email1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email2", DbType="NVarChar(50)")] string email2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateAdded", DbType="DateTime")] System.Nullable<System.DateTime> dateAdded, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddedBy", DbType="BigInt")] System.Nullable<long> addedBy, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Int")] System.Nullable<int> isActive, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId, titleId, firstName, middleName, lastName, employeeCode, employeeTypeId, cellPhone, driverLicenseStateId, driverLicenseNumber, driverLicensExpDate, specialPayrollConditions, street, suite, city, stateId, countryId, zip, phone1, phone1Ext, phone2, phone2Ext, fax, email1, email2, dateAdded, addedBy, isActive, orgID);
			employeeId = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SuperAdminLogin")]
		public ISingleResult<SuperAdminLoginResult> SuperAdminLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(100)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserPassword", DbType="NVarChar(100)")] string userPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgCode", DbType="VarChar(10)")] string orgCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, userPassword, orgCode);
			return ((ISingleResult<SuperAdminLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SuperAdminLoginWithIP")]
		public ISingleResult<SuperAdminLoginWithIPResult> SuperAdminLoginWithIP([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserPassword", DbType="NVarChar(50)")] string userPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IPAddress", DbType="VarChar(20)")] string iPAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgCode", DbType="VarChar(10)")] string orgCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, userPassword, iPAddress, orgCode);
			return ((ISingleResult<SuperAdminLoginWithIPResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Permission_ByUserID")]
		public ISingleResult<Permission_ByUserIDResult> Permission_ByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<Permission_ByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_GetIPRestriction")]
		public ISingleResult<User_GetIPRestrictionResult> User_GetIPRestriction([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, password);
			return ((ISingleResult<User_GetIPRestrictionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Email_Password")]
		public ISingleResult<Email_PasswordResult> Email_Password([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, email);
			return ((ISingleResult<Email_PasswordResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTitles")]
		public ISingleResult<GetTitlesResult> GetTitles()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetTitlesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEmployeeList")]
		public ISingleResult<GetEmployeeListResult> GetEmployeeList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetEmployeeListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SecurityUser_UpdateActiveStatus")]
		public int SecurityUser_UpdateActiveStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Int")] System.Nullable<int> isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, isActive);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SecurityGroupInsert")]
		public ISingleResult<SecurityGroupInsertResult> SecurityGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupId", DbType="BigInt")] ref System.Nullable<long> securityGroupId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupName", DbType="NVarChar(50)")] string groupName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupDesc", DbType="NVarChar(255)")] string groupDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddedBy", DbType="BigInt")] System.Nullable<long> addedBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSystemDefault", DbType="Bit")] System.Nullable<bool> isSystemDefault, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), securityGroupId, groupName, groupDesc, addedBy, isSystemDefault, orgID);
			securityGroupId = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((ISingleResult<SecurityGroupInsertResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IPUser_PermissionSelect")]
		public ISingleResult<IPUser_PermissionSelectResult> IPUser_PermissionSelect([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<IPUser_PermissionSelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUserSettings")]
		public ISingleResult<UpdateUserSettingsResult> UpdateUserSettings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingKeyValue", DbType="VarChar(5)")] string settingKeyValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, settingKeyValue);
			return ((ISingleResult<UpdateUserSettingsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SecurityUser_Update")]
		public int SecurityUser_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayName", DbType="NVarChar(50)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserNote", DbType="NVarChar(255)")] string userNote, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModifiedBy", DbType="BigInt")] System.Nullable<long> modifiedBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Int")] System.Nullable<int> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityUserId", DbType="BigInt")] System.Nullable<long> securityUserId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayName, userNote, modifiedBy, isActive, securityUserId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAssociatedGroupsWithUser")]
		public ISingleResult<GetAssociatedGroupsWithUserResult> GetAssociatedGroupsWithUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<GetAssociatedGroupsWithUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spEntity5in1")]
		public ISingleResult<spEntity5in1Result> spEntity5in1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Initial", DbType="NVarChar(50)")] string initial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="NVarChar(50)")] string state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="NVarChar(50)")] string zip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EntityType", DbType="Int")] System.Nullable<int> entityType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), initial, city, state, zip, entityType, orgID);
			return ((ISingleResult<spEntity5in1Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Logout")]
		public int Logout([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginHistoryID", DbType="BigInt")] System.Nullable<long> loginHistoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginHistoryID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Admin_CheckUserNameExistance")]
		public ISingleResult<Admin_CheckUserNameExistanceResult> Admin_CheckUserNameExistance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(100)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<Admin_CheckUserNameExistanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectAllLookupTables")]
		public ISingleResult<SelectAllLookupTablesResult> SelectAllLookupTables([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsReadWrite", DbType="Bit")] System.Nullable<bool> isReadWrite)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isReadWrite);
			return ((ISingleResult<SelectAllLookupTablesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BuyerListSearch")]
		public ISingleResult<BuyerListSearchResult> BuyerListSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuyerName", DbType="NVarChar(50)")] string buyerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Commission", DbType="Int")] System.Nullable<int> commission, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Payment", DbType="Int")] System.Nullable<int> payment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country", DbType="Int")] System.Nullable<int> country, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="Int")] System.Nullable<int> state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="NVarChar(20)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), buyerName, commission, payment, city, country, state, zipCode, status, orgID);
			return ((ISingleResult<BuyerListSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VendorSearchList")]
		public ISingleResult<VendorSearchListResult> VendorSearchList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorName", DbType="NVarChar(50)")] string vendorName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="Int")] System.Nullable<int> category, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(50)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country", DbType="Int")] System.Nullable<int> country, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="Int")] System.Nullable<int> state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="NVarChar(20)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorName, category, type, city, country, state, zipCode, status, orgID);
			return ((ISingleResult<VendorSearchListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Organisation_CountAllEmployees")]
		public ISingleResult<Organisation_CountAllEmployeesResult> Organisation_CountAllEmployees([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID);
			return ((ISingleResult<Organisation_CountAllEmployeesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Admin_UpdateEntityStatus")]
		public int Admin_UpdateEntityStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EntityTypeID", DbType="Int")] System.Nullable<int> entityTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EntityID", DbType="BigInt")] System.Nullable<long> entityID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, entityTypeID, entityID, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Admin_GetLeftPanelValue")]
		public ISingleResult<Admin_GetLeftPanelValueResult> Admin_GetLeftPanelValue()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Admin_GetLeftPanelValueResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Organisation_Search")]
		public ISingleResult<Organisation_SearchResult> Organisation_Search([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgName", DbType="VarChar(50)")] string orgName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgCode", DbType="VarChar(10)")] string orgCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(20)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Website", DbType="VarChar(500)")] string website, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(100)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgName, orgCode, phone, website, email);
			return ((ISingleResult<Organisation_SearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Admin_DeleteOrganisation")]
		public int Admin_DeleteOrganisation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginID", DbType="BigInt")] System.Nullable<long> loginID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, status, loginID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Image_DeleteOrganisation")]
		public int Image_DeleteOrganisation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllUserInfo")]
		public ISingleResult<GetAllUserInfoResult> GetAllUserInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(100)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayName", DbType="VarChar(100)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EntityTypeID", DbType="Int")] System.Nullable<int> entityTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortExpression", DbType="VarChar(50)")] string sortExpression, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Int")] System.Nullable<int> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, displayName, entityTypeID, sortExpression, isActive, orgID);
			return ((ISingleResult<GetAllUserInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Admin_GetUserInfo")]
		public ISingleResult<Admin_GetUserInfoResult> Admin_GetUserInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityUserId", DbType="BigInt")] System.Nullable<long> securityUserId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), securityUserId);
			return ((ISingleResult<Admin_GetUserInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewBankAccount")]
		public int AddNewBankAccount([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="Int")] ref System.Nullable<int> result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccNumber", DbType="NVarChar(50)")] string accNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="SmallInt")] System.Nullable<short> orgID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddedBy", DbType="BigInt")] System.Nullable<long> addedBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Int")] System.Nullable<int> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="VarChar(15)")] string status)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), result, bankID, accNumber, orgID, addedBy, isActive, status);
			result = ((System.Nullable<int>)(result1.GetParameterValue(0)));
			return ((int)(result1.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityUser")]
	public partial class SecurityUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SecurityUserID;
		
		private System.Nullable<int> _EntityTypeID;
		
		private System.Nullable<long> _EntityID;
		
		private string _UserName;
		
		private string _UserPassword;
		
		private string _DisplayName;
		
		private string _UserNote;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<long> _ContactId;
		
		private System.Nullable<bool> _IPRestriction;
		
		private System.Nullable<short> _OrgID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecurityUserIDChanging(long value);
    partial void OnSecurityUserIDChanged();
    partial void OnEntityTypeIDChanging(System.Nullable<int> value);
    partial void OnEntityTypeIDChanged();
    partial void OnEntityIDChanging(System.Nullable<long> value);
    partial void OnEntityIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUserNoteChanging(string value);
    partial void OnUserNoteChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnContactIdChanging(System.Nullable<long> value);
    partial void OnContactIdChanged();
    partial void OnIPRestrictionChanging(System.Nullable<bool> value);
    partial void OnIPRestrictionChanged();
    partial void OnOrgIDChanging(System.Nullable<short> value);
    partial void OnOrgIDChanged();
    #endregion
		
		public SecurityUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityUserID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SecurityUserID
		{
			get
			{
				return this._SecurityUserID;
			}
			set
			{
				if ((this._SecurityUserID != value))
				{
					this.OnSecurityUserIDChanging(value);
					this.SendPropertyChanging();
					this._SecurityUserID = value;
					this.SendPropertyChanged("SecurityUserID");
					this.OnSecurityUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int")]
		public System.Nullable<int> EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this.OnEntityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeID = value;
					this.SendPropertyChanged("EntityTypeID");
					this.OnEntityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="BigInt")]
		public System.Nullable<long> EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNote", DbType="NVarChar(255)")]
		public string UserNote
		{
			get
			{
				return this._UserNote;
			}
			set
			{
				if ((this._UserNote != value))
				{
					this.OnUserNoteChanging(value);
					this.SendPropertyChanging();
					this._UserNote = value;
					this.SendPropertyChanged("UserNote");
					this.OnUserNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="BigInt")]
		public System.Nullable<long> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPRestriction", DbType="Bit")]
		public System.Nullable<bool> IPRestriction
		{
			get
			{
				return this._IPRestriction;
			}
			set
			{
				if ((this._IPRestriction != value))
				{
					this.OnIPRestrictionChanging(value);
					this.SendPropertyChanging();
					this._IPRestriction = value;
					this.SendPropertyChanged("IPRestriction");
					this.OnIPRestrictionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dealer")]
	public partial class Dealer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DealerId;
		
		private string _DealerName;
		
		private string _DealerDIN;
		
		private System.Nullable<int> _DealerTypeId;
		
		private System.Nullable<int> _DealerCategoryId;
		
		private System.Nullable<int> _DealerSourceId;
		
		private string _Comment;
		
		private System.Nullable<bool> _PreferenceSettings;
		
		private System.Nullable<bool> _ReceiveSms;
		
		private System.Nullable<bool> _ReceiveEmail;
		
		private string _AuctionAccessNo;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<short> _OrgID;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<DealerType> _DealerType;
		
		private EntityRef<DealerSource> _DealerSource;
		
		private EntityRef<DealerCategory> _DealerCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealerIdChanging(long value);
    partial void OnDealerIdChanged();
    partial void OnDealerNameChanging(string value);
    partial void OnDealerNameChanged();
    partial void OnDealerDINChanging(string value);
    partial void OnDealerDINChanged();
    partial void OnDealerTypeIdChanging(System.Nullable<int> value);
    partial void OnDealerTypeIdChanged();
    partial void OnDealerCategoryIdChanging(System.Nullable<int> value);
    partial void OnDealerCategoryIdChanged();
    partial void OnDealerSourceIdChanging(System.Nullable<int> value);
    partial void OnDealerSourceIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPreferenceSettingsChanging(System.Nullable<bool> value);
    partial void OnPreferenceSettingsChanged();
    partial void OnReceiveSmsChanging(System.Nullable<bool> value);
    partial void OnReceiveSmsChanged();
    partial void OnReceiveEmailChanging(System.Nullable<bool> value);
    partial void OnReceiveEmailChanged();
    partial void OnAuctionAccessNoChanging(string value);
    partial void OnAuctionAccessNoChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnOrgIDChanging(System.Nullable<short> value);
    partial void OnOrgIDChanged();
    #endregion
		
		public Dealer()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._DealerType = default(EntityRef<DealerType>);
			this._DealerSource = default(EntityRef<DealerSource>);
			this._DealerCategory = default(EntityRef<DealerCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long DealerId
		{
			get
			{
				return this._DealerId;
			}
			set
			{
				if ((this._DealerId != value))
				{
					this.OnDealerIdChanging(value);
					this.SendPropertyChanging();
					this._DealerId = value;
					this.SendPropertyChanged("DealerId");
					this.OnDealerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerName", DbType="NVarChar(50)")]
		public string DealerName
		{
			get
			{
				return this._DealerName;
			}
			set
			{
				if ((this._DealerName != value))
				{
					this.OnDealerNameChanging(value);
					this.SendPropertyChanging();
					this._DealerName = value;
					this.SendPropertyChanged("DealerName");
					this.OnDealerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerDIN", DbType="NVarChar(50)")]
		public string DealerDIN
		{
			get
			{
				return this._DealerDIN;
			}
			set
			{
				if ((this._DealerDIN != value))
				{
					this.OnDealerDINChanging(value);
					this.SendPropertyChanging();
					this._DealerDIN = value;
					this.SendPropertyChanged("DealerDIN");
					this.OnDealerDINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerTypeId", DbType="Int")]
		public System.Nullable<int> DealerTypeId
		{
			get
			{
				return this._DealerTypeId;
			}
			set
			{
				if ((this._DealerTypeId != value))
				{
					if (this._DealerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealerTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DealerTypeId = value;
					this.SendPropertyChanged("DealerTypeId");
					this.OnDealerTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerCategoryId", DbType="Int")]
		public System.Nullable<int> DealerCategoryId
		{
			get
			{
				return this._DealerCategoryId;
			}
			set
			{
				if ((this._DealerCategoryId != value))
				{
					if (this._DealerCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealerCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DealerCategoryId = value;
					this.SendPropertyChanged("DealerCategoryId");
					this.OnDealerCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerSourceId", DbType="Int")]
		public System.Nullable<int> DealerSourceId
		{
			get
			{
				return this._DealerSourceId;
			}
			set
			{
				if ((this._DealerSourceId != value))
				{
					if (this._DealerSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealerSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DealerSourceId = value;
					this.SendPropertyChanged("DealerSourceId");
					this.OnDealerSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferenceSettings", DbType="Bit")]
		public System.Nullable<bool> PreferenceSettings
		{
			get
			{
				return this._PreferenceSettings;
			}
			set
			{
				if ((this._PreferenceSettings != value))
				{
					this.OnPreferenceSettingsChanging(value);
					this.SendPropertyChanging();
					this._PreferenceSettings = value;
					this.SendPropertyChanged("PreferenceSettings");
					this.OnPreferenceSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveSms", DbType="Bit")]
		public System.Nullable<bool> ReceiveSms
		{
			get
			{
				return this._ReceiveSms;
			}
			set
			{
				if ((this._ReceiveSms != value))
				{
					this.OnReceiveSmsChanging(value);
					this.SendPropertyChanging();
					this._ReceiveSms = value;
					this.SendPropertyChanged("ReceiveSms");
					this.OnReceiveSmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveEmail", DbType="Bit")]
		public System.Nullable<bool> ReceiveEmail
		{
			get
			{
				return this._ReceiveEmail;
			}
			set
			{
				if ((this._ReceiveEmail != value))
				{
					this.OnReceiveEmailChanging(value);
					this.SendPropertyChanging();
					this._ReceiveEmail = value;
					this.SendPropertyChanged("ReceiveEmail");
					this.OnReceiveEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionAccessNo", DbType="NVarChar(20)")]
		public string AuctionAccessNo
		{
			get
			{
				return this._AuctionAccessNo;
			}
			set
			{
				if ((this._AuctionAccessNo != value))
				{
					this.OnAuctionAccessNoChanging(value);
					this.SendPropertyChanging();
					this._AuctionAccessNo = value;
					this.SendPropertyChanged("AuctionAccessNo");
					this.OnAuctionAccessNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dealer_Address", Storage="_Addresses", ThisKey="DealerId", OtherKey="EntityId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerType_Dealer", Storage="_DealerType", ThisKey="DealerTypeId", OtherKey="DealerTypeId", IsForeignKey=true)]
		public DealerType DealerType
		{
			get
			{
				return this._DealerType.Entity;
			}
			set
			{
				DealerType previousValue = this._DealerType.Entity;
				if (((previousValue != value) 
							|| (this._DealerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerType.Entity = null;
						previousValue.Dealers.Remove(this);
					}
					this._DealerType.Entity = value;
					if ((value != null))
					{
						value.Dealers.Add(this);
						this._DealerTypeId = value.DealerTypeId;
					}
					else
					{
						this._DealerTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DealerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerSource_Dealer", Storage="_DealerSource", ThisKey="DealerSourceId", OtherKey="DealerSourceId", IsForeignKey=true)]
		public DealerSource DealerSource
		{
			get
			{
				return this._DealerSource.Entity;
			}
			set
			{
				DealerSource previousValue = this._DealerSource.Entity;
				if (((previousValue != value) 
							|| (this._DealerSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerSource.Entity = null;
						previousValue.Dealers.Remove(this);
					}
					this._DealerSource.Entity = value;
					if ((value != null))
					{
						value.Dealers.Add(this);
						this._DealerSourceId = value.DealerSourceId;
					}
					else
					{
						this._DealerSourceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DealerSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerCategory_Dealer", Storage="_DealerCategory", ThisKey="DealerCategoryId", OtherKey="DealerCategoryId", IsForeignKey=true)]
		public DealerCategory DealerCategory
		{
			get
			{
				return this._DealerCategory.Entity;
			}
			set
			{
				DealerCategory previousValue = this._DealerCategory.Entity;
				if (((previousValue != value) 
							|| (this._DealerCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerCategory.Entity = null;
						previousValue.Dealers.Remove(this);
					}
					this._DealerCategory.Entity = value;
					if ((value != null))
					{
						value.Dealers.Add(this);
						this._DealerCategoryId = value.DealerCategoryId;
					}
					else
					{
						this._DealerCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DealerCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Dealer = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Dealer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AddressId;
		
		private System.Nullable<long> _EntityId;
		
		private System.Nullable<int> _EntityTypeId;
		
		private string _Street;
		
		private string _Suite;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private System.Nullable<int> _CountryId;
		
		private string _Zip;
		
		private string _Phone1;
		
		private string _Phone1Ext;
		
		private string _Phone2;
		
		private string _Phone2Ext;
		
		private string _Fax;
		
		private string _Email1;
		
		private string _Email2;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private System.Nullable<int> _IsActive;
		
		private EntityRef<Dealer> _Dealer;
		
		private EntityRef<EntityType> _EntityType;
		
		private EntityRef<Buyer> _Buyer;
		
		private EntityRef<Vendor> _Vendor;
		
		private EntityRef<UtilityCompany> _UtilityCompany;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(long value);
    partial void OnAddressIdChanged();
    partial void OnEntityIdChanging(System.Nullable<long> value);
    partial void OnEntityIdChanged();
    partial void OnEntityTypeIdChanging(System.Nullable<int> value);
    partial void OnEntityTypeIdChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnSuiteChanging(string value);
    partial void OnSuiteChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    partial void OnCountryIdChanging(System.Nullable<int> value);
    partial void OnCountryIdChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone1ExtChanging(string value);
    partial void OnPhone1ExtChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhone2ExtChanging(string value);
    partial void OnPhone2ExtChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmail1Changing(string value);
    partial void OnEmail1Changed();
    partial void OnEmail2Changing(string value);
    partial void OnEmail2Changed();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Address()
		{
			this._Dealer = default(EntityRef<Dealer>);
			this._EntityType = default(EntityRef<EntityType>);
			this._Buyer = default(EntityRef<Buyer>);
			this._Vendor = default(EntityRef<Vendor>);
			this._UtilityCompany = default(EntityRef<UtilityCompany>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="BigInt")]
		public System.Nullable<long> EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					if (((((this._Dealer.HasLoadedOrAssignedValue || this._Buyer.HasLoadedOrAssignedValue) 
								|| this._Vendor.HasLoadedOrAssignedValue) 
								|| this._UtilityCompany.HasLoadedOrAssignedValue) 
								|| this._Employee.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeId", DbType="Int")]
		public System.Nullable<int> EntityTypeId
		{
			get
			{
				return this._EntityTypeId;
			}
			set
			{
				if ((this._EntityTypeId != value))
				{
					if (this._EntityType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeId = value;
					this.SendPropertyChanged("EntityTypeId");
					this.OnEntityTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suite", DbType="NVarChar(50)")]
		public string Suite
		{
			get
			{
				return this._Suite;
			}
			set
			{
				if ((this._Suite != value))
				{
					this.OnSuiteChanging(value);
					this.SendPropertyChanging();
					this._Suite = value;
					this.SendPropertyChanged("Suite");
					this.OnSuiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int")]
		public System.Nullable<int> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(50)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1Ext", DbType="NVarChar(50)")]
		public string Phone1Ext
		{
			get
			{
				return this._Phone1Ext;
			}
			set
			{
				if ((this._Phone1Ext != value))
				{
					this.OnPhone1ExtChanging(value);
					this.SendPropertyChanging();
					this._Phone1Ext = value;
					this.SendPropertyChanged("Phone1Ext");
					this.OnPhone1ExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(50)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2Ext", DbType="NVarChar(50)")]
		public string Phone2Ext
		{
			get
			{
				return this._Phone2Ext;
			}
			set
			{
				if ((this._Phone2Ext != value))
				{
					this.OnPhone2ExtChanging(value);
					this.SendPropertyChanging();
					this._Phone2Ext = value;
					this.SendPropertyChanged("Phone2Ext");
					this.OnPhone2ExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email1", DbType="NVarChar(50)")]
		public string Email1
		{
			get
			{
				return this._Email1;
			}
			set
			{
				if ((this._Email1 != value))
				{
					this.OnEmail1Changing(value);
					this.SendPropertyChanging();
					this._Email1 = value;
					this.SendPropertyChanged("Email1");
					this.OnEmail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email2", DbType="NVarChar(50)")]
		public string Email2
		{
			get
			{
				return this._Email2;
			}
			set
			{
				if ((this._Email2 != value))
				{
					this.OnEmail2Changing(value);
					this.SendPropertyChanging();
					this._Email2 = value;
					this.SendPropertyChanged("Email2");
					this.OnEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dealer_Address", Storage="_Dealer", ThisKey="EntityId", OtherKey="DealerId", IsForeignKey=true)]
		public Dealer Dealer
		{
			get
			{
				return this._Dealer.Entity;
			}
			set
			{
				Dealer previousValue = this._Dealer.Entity;
				if (((previousValue != value) 
							|| (this._Dealer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dealer.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Dealer.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._EntityId = value.DealerId;
					}
					else
					{
						this._EntityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dealer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityType_Address", Storage="_EntityType", ThisKey="EntityTypeId", OtherKey="EntityTypeId", IsForeignKey=true)]
		public EntityType EntityType
		{
			get
			{
				return this._EntityType.Entity;
			}
			set
			{
				EntityType previousValue = this._EntityType.Entity;
				if (((previousValue != value) 
							|| (this._EntityType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityType.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._EntityType.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._EntityTypeId = value.EntityTypeId;
					}
					else
					{
						this._EntityTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntityType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_Address", Storage="_Buyer", ThisKey="EntityId", OtherKey="BuyerId", IsForeignKey=true)]
		public Buyer Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Buyer previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._EntityId = value.BuyerId;
					}
					else
					{
						this._EntityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Address", Storage="_Vendor", ThisKey="EntityId", OtherKey="VendorId", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._EntityId = value.VendorId;
					}
					else
					{
						this._EntityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UtilityCompany_Address", Storage="_UtilityCompany", ThisKey="EntityId", OtherKey="UtilityCompanyId", IsForeignKey=true)]
		public UtilityCompany UtilityCompany
		{
			get
			{
				return this._UtilityCompany.Entity;
			}
			set
			{
				UtilityCompany previousValue = this._UtilityCompany.Entity;
				if (((previousValue != value) 
							|| (this._UtilityCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UtilityCompany.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._UtilityCompany.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._EntityId = value.UtilityCompanyId;
					}
					else
					{
						this._EntityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("UtilityCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Address", Storage="_Employee", ThisKey="EntityId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._EntityId = value.EmployeeId;
					}
					else
					{
						this._EntityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityType")]
	public partial class EntityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityTypeId;
		
		private string _EntityType1;
		
		private int _IsActive;
		
		private System.Nullable<bool> _IsRealEntity;
		
		private EntitySet<Address> _Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityTypeIdChanging(int value);
    partial void OnEntityTypeIdChanged();
    partial void OnEntityType1Changing(string value);
    partial void OnEntityType1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnIsRealEntityChanging(System.Nullable<bool> value);
    partial void OnIsRealEntityChanged();
    #endregion
		
		public EntityType()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EntityTypeId
		{
			get
			{
				return this._EntityTypeId;
			}
			set
			{
				if ((this._EntityTypeId != value))
				{
					this.OnEntityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeId = value;
					this.SendPropertyChanged("EntityTypeId");
					this.OnEntityTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EntityType", Storage="_EntityType1", DbType="NVarChar(50)")]
		public string EntityType1
		{
			get
			{
				return this._EntityType1;
			}
			set
			{
				if ((this._EntityType1 != value))
				{
					this.OnEntityType1Changing(value);
					this.SendPropertyChanging();
					this._EntityType1 = value;
					this.SendPropertyChanged("EntityType1");
					this.OnEntityType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRealEntity", DbType="Bit")]
		public System.Nullable<bool> IsRealEntity
		{
			get
			{
				return this._IsRealEntity;
			}
			set
			{
				if ((this._IsRealEntity != value))
				{
					this.OnIsRealEntityChanging(value);
					this.SendPropertyChanging();
					this._IsRealEntity = value;
					this.SendPropertyChanged("IsRealEntity");
					this.OnIsRealEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityType_Address", Storage="_Addresses", ThisKey="EntityTypeId", OtherKey="EntityTypeId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.EntityType = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.EntityType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buyer")]
	public partial class Buyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _BuyerId;
		
		private System.Nullable<int> _TitleId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Buyer_Code;
		
		private string _TaxIdNumber;
		
		private System.Nullable<int> _PaymentTermId;
		
		private System.Nullable<int> _CommissionTypeId;
		
		private System.Nullable<int> _Level2CommissionTypeId;
		
		private System.Nullable<long> _Level2CommissionBuyerId;
		
		private System.Nullable<decimal> _CommissionValue;
		
		private string _StateSalesmanLicenseNumber;
		
		private string _LicensePlateNumber;
		
		private string _CellPhone;
		
		private System.Nullable<int> _CommissionTermId;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<bool> _IsDirectBuyer;
		
		private System.Nullable<long> _ParentBuyer;
		
		private System.Nullable<short> _AccessLevel;
		
		private System.Nullable<short> _OrgID;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<PaymentTerm> _PaymentTerm;
		
		private EntityRef<CommissionType> _CommissionType;
		
		private EntityRef<CommissionTerm> _CommissionTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuyerIdChanging(long value);
    partial void OnBuyerIdChanged();
    partial void OnTitleIdChanging(System.Nullable<int> value);
    partial void OnTitleIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnBuyer_CodeChanging(string value);
    partial void OnBuyer_CodeChanged();
    partial void OnTaxIdNumberChanging(string value);
    partial void OnTaxIdNumberChanged();
    partial void OnPaymentTermIdChanging(System.Nullable<int> value);
    partial void OnPaymentTermIdChanged();
    partial void OnCommissionTypeIdChanging(System.Nullable<int> value);
    partial void OnCommissionTypeIdChanged();
    partial void OnLevel2CommissionTypeIdChanging(System.Nullable<int> value);
    partial void OnLevel2CommissionTypeIdChanged();
    partial void OnLevel2CommissionBuyerIdChanging(System.Nullable<long> value);
    partial void OnLevel2CommissionBuyerIdChanged();
    partial void OnCommissionValueChanging(System.Nullable<decimal> value);
    partial void OnCommissionValueChanged();
    partial void OnStateSalesmanLicenseNumberChanging(string value);
    partial void OnStateSalesmanLicenseNumberChanged();
    partial void OnLicensePlateNumberChanging(string value);
    partial void OnLicensePlateNumberChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnCommissionTermIdChanging(System.Nullable<int> value);
    partial void OnCommissionTermIdChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnIsDirectBuyerChanging(System.Nullable<bool> value);
    partial void OnIsDirectBuyerChanged();
    partial void OnParentBuyerChanging(System.Nullable<long> value);
    partial void OnParentBuyerChanged();
    partial void OnAccessLevelChanging(System.Nullable<short> value);
    partial void OnAccessLevelChanged();
    partial void OnOrgIDChanging(System.Nullable<short> value);
    partial void OnOrgIDChanged();
    #endregion
		
		public Buyer()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._PaymentTerm = default(EntityRef<PaymentTerm>);
			this._CommissionType = default(EntityRef<CommissionType>);
			this._CommissionTerm = default(EntityRef<CommissionTerm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long BuyerId
		{
			get
			{
				return this._BuyerId;
			}
			set
			{
				if ((this._BuyerId != value))
				{
					this.OnBuyerIdChanging(value);
					this.SendPropertyChanging();
					this._BuyerId = value;
					this.SendPropertyChanged("BuyerId");
					this.OnBuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int")]
		public System.Nullable<int> TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					this.OnTitleIdChanging(value);
					this.SendPropertyChanging();
					this._TitleId = value;
					this.SendPropertyChanged("TitleId");
					this.OnTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buyer_Code", DbType="NVarChar(50)")]
		public string Buyer_Code
		{
			get
			{
				return this._Buyer_Code;
			}
			set
			{
				if ((this._Buyer_Code != value))
				{
					this.OnBuyer_CodeChanging(value);
					this.SendPropertyChanging();
					this._Buyer_Code = value;
					this.SendPropertyChanged("Buyer_Code");
					this.OnBuyer_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIdNumber", DbType="NVarChar(50)")]
		public string TaxIdNumber
		{
			get
			{
				return this._TaxIdNumber;
			}
			set
			{
				if ((this._TaxIdNumber != value))
				{
					this.OnTaxIdNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxIdNumber = value;
					this.SendPropertyChanged("TaxIdNumber");
					this.OnTaxIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermId", DbType="Int")]
		public System.Nullable<int> PaymentTermId
		{
			get
			{
				return this._PaymentTermId;
			}
			set
			{
				if ((this._PaymentTermId != value))
				{
					if (this._PaymentTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTermIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermId = value;
					this.SendPropertyChanged("PaymentTermId");
					this.OnPaymentTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionTypeId", DbType="Int")]
		public System.Nullable<int> CommissionTypeId
		{
			get
			{
				return this._CommissionTypeId;
			}
			set
			{
				if ((this._CommissionTypeId != value))
				{
					if (this._CommissionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CommissionTypeId = value;
					this.SendPropertyChanged("CommissionTypeId");
					this.OnCommissionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level2CommissionTypeId", DbType="Int")]
		public System.Nullable<int> Level2CommissionTypeId
		{
			get
			{
				return this._Level2CommissionTypeId;
			}
			set
			{
				if ((this._Level2CommissionTypeId != value))
				{
					this.OnLevel2CommissionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._Level2CommissionTypeId = value;
					this.SendPropertyChanged("Level2CommissionTypeId");
					this.OnLevel2CommissionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level2CommissionBuyerId", DbType="BigInt")]
		public System.Nullable<long> Level2CommissionBuyerId
		{
			get
			{
				return this._Level2CommissionBuyerId;
			}
			set
			{
				if ((this._Level2CommissionBuyerId != value))
				{
					this.OnLevel2CommissionBuyerIdChanging(value);
					this.SendPropertyChanging();
					this._Level2CommissionBuyerId = value;
					this.SendPropertyChanged("Level2CommissionBuyerId");
					this.OnLevel2CommissionBuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CommissionValue
		{
			get
			{
				return this._CommissionValue;
			}
			set
			{
				if ((this._CommissionValue != value))
				{
					this.OnCommissionValueChanging(value);
					this.SendPropertyChanging();
					this._CommissionValue = value;
					this.SendPropertyChanged("CommissionValue");
					this.OnCommissionValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateSalesmanLicenseNumber", DbType="NVarChar(50)")]
		public string StateSalesmanLicenseNumber
		{
			get
			{
				return this._StateSalesmanLicenseNumber;
			}
			set
			{
				if ((this._StateSalesmanLicenseNumber != value))
				{
					this.OnStateSalesmanLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._StateSalesmanLicenseNumber = value;
					this.SendPropertyChanged("StateSalesmanLicenseNumber");
					this.OnStateSalesmanLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlateNumber", DbType="NVarChar(50)")]
		public string LicensePlateNumber
		{
			get
			{
				return this._LicensePlateNumber;
			}
			set
			{
				if ((this._LicensePlateNumber != value))
				{
					this.OnLicensePlateNumberChanging(value);
					this.SendPropertyChanging();
					this._LicensePlateNumber = value;
					this.SendPropertyChanged("LicensePlateNumber");
					this.OnLicensePlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(50)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionTermId", DbType="Int")]
		public System.Nullable<int> CommissionTermId
		{
			get
			{
				return this._CommissionTermId;
			}
			set
			{
				if ((this._CommissionTermId != value))
				{
					if (this._CommissionTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommissionTermIdChanging(value);
					this.SendPropertyChanging();
					this._CommissionTermId = value;
					this.SendPropertyChanged("CommissionTermId");
					this.OnCommissionTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDirectBuyer", DbType="Bit")]
		public System.Nullable<bool> IsDirectBuyer
		{
			get
			{
				return this._IsDirectBuyer;
			}
			set
			{
				if ((this._IsDirectBuyer != value))
				{
					this.OnIsDirectBuyerChanging(value);
					this.SendPropertyChanging();
					this._IsDirectBuyer = value;
					this.SendPropertyChanged("IsDirectBuyer");
					this.OnIsDirectBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentBuyer", DbType="BigInt")]
		public System.Nullable<long> ParentBuyer
		{
			get
			{
				return this._ParentBuyer;
			}
			set
			{
				if ((this._ParentBuyer != value))
				{
					this.OnParentBuyerChanging(value);
					this.SendPropertyChanging();
					this._ParentBuyer = value;
					this.SendPropertyChanged("ParentBuyer");
					this.OnParentBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="SmallInt")]
		public System.Nullable<short> AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buyer_Address", Storage="_Addresses", ThisKey="BuyerId", OtherKey="EntityId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentTerm_Buyer", Storage="_PaymentTerm", ThisKey="PaymentTermId", OtherKey="PaymentTermId", IsForeignKey=true)]
		public PaymentTerm PaymentTerm
		{
			get
			{
				return this._PaymentTerm.Entity;
			}
			set
			{
				PaymentTerm previousValue = this._PaymentTerm.Entity;
				if (((previousValue != value) 
							|| (this._PaymentTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentTerm.Entity = null;
						previousValue.Buyers.Remove(this);
					}
					this._PaymentTerm.Entity = value;
					if ((value != null))
					{
						value.Buyers.Add(this);
						this._PaymentTermId = value.PaymentTermId;
					}
					else
					{
						this._PaymentTermId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommissionType_Buyer", Storage="_CommissionType", ThisKey="CommissionTypeId", OtherKey="CommissionTypeId", IsForeignKey=true)]
		public CommissionType CommissionType
		{
			get
			{
				return this._CommissionType.Entity;
			}
			set
			{
				CommissionType previousValue = this._CommissionType.Entity;
				if (((previousValue != value) 
							|| (this._CommissionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommissionType.Entity = null;
						previousValue.Buyers.Remove(this);
					}
					this._CommissionType.Entity = value;
					if ((value != null))
					{
						value.Buyers.Add(this);
						this._CommissionTypeId = value.CommissionTypeId;
					}
					else
					{
						this._CommissionTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CommissionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommissionTerm_Buyer", Storage="_CommissionTerm", ThisKey="CommissionTermId", OtherKey="CommissionTermId", IsForeignKey=true)]
		public CommissionTerm CommissionTerm
		{
			get
			{
				return this._CommissionTerm.Entity;
			}
			set
			{
				CommissionTerm previousValue = this._CommissionTerm.Entity;
				if (((previousValue != value) 
							|| (this._CommissionTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommissionTerm.Entity = null;
						previousValue.Buyers.Remove(this);
					}
					this._CommissionTerm.Entity = value;
					if ((value != null))
					{
						value.Buyers.Add(this);
						this._CommissionTermId = value.CommissionTermId;
					}
					else
					{
						this._CommissionTermId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CommissionTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Engine")]
	public partial class Engine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EngineId;
		
		private string _EngineType;
		
		private string _Engine1;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEngineIdChanging(int value);
    partial void OnEngineIdChanged();
    partial void OnEngineTypeChanging(string value);
    partial void OnEngineTypeChanged();
    partial void OnEngine1Changing(string value);
    partial void OnEngine1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Engine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EngineId
		{
			get
			{
				return this._EngineId;
			}
			set
			{
				if ((this._EngineId != value))
				{
					this.OnEngineIdChanging(value);
					this.SendPropertyChanging();
					this._EngineId = value;
					this.SendPropertyChanged("EngineId");
					this.OnEngineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineType", DbType="VarChar(10)")]
		public string EngineType
		{
			get
			{
				return this._EngineType;
			}
			set
			{
				if ((this._EngineType != value))
				{
					this.OnEngineTypeChanging(value);
					this.SendPropertyChanging();
					this._EngineType = value;
					this.SendPropertyChanged("EngineType");
					this.OnEngineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Engine", Storage="_Engine1", DbType="NVarChar(50)")]
		public string Engine1
		{
			get
			{
				return this._Engine1;
			}
			set
			{
				if ((this._Engine1 != value))
				{
					this.OnEngine1Changing(value);
					this.SendPropertyChanging();
					this._Engine1 = value;
					this.SendPropertyChanged("Engine1");
					this.OnEngine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WheelDrive")]
	public partial class WheelDrive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WheelDriveId;
		
		private string _WheelDrive1;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWheelDriveIdChanging(int value);
    partial void OnWheelDriveIdChanged();
    partial void OnWheelDrive1Changing(string value);
    partial void OnWheelDrive1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public WheelDrive()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WheelDriveId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WheelDriveId
		{
			get
			{
				return this._WheelDriveId;
			}
			set
			{
				if ((this._WheelDriveId != value))
				{
					this.OnWheelDriveIdChanging(value);
					this.SendPropertyChanging();
					this._WheelDriveId = value;
					this.SendPropertyChanged("WheelDriveId");
					this.OnWheelDriveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="WheelDrive", Storage="_WheelDrive1", DbType="NVarChar(50)")]
		public string WheelDrive1
		{
			get
			{
				return this._WheelDrive1;
			}
			set
			{
				if ((this._WheelDrive1 != value))
				{
					this.OnWheelDrive1Changing(value);
					this.SendPropertyChanging();
					this._WheelDrive1 = value;
					this.SendPropertyChanged("WheelDrive1");
					this.OnWheelDrive1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendorType")]
	public partial class VendorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorTypeId;
		
		private string _VendorType1;
		
		private int _IsActive;
		
		private EntitySet<Vendor> _Vendors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorTypeIdChanging(int value);
    partial void OnVendorTypeIdChanged();
    partial void OnVendorType1Changing(string value);
    partial void OnVendorType1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public VendorType()
		{
			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorTypeId
		{
			get
			{
				return this._VendorTypeId;
			}
			set
			{
				if ((this._VendorTypeId != value))
				{
					this.OnVendorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VendorTypeId = value;
					this.SendPropertyChanged("VendorTypeId");
					this.OnVendorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VendorType", Storage="_VendorType1", DbType="NVarChar(50)")]
		public string VendorType1
		{
			get
			{
				return this._VendorType1;
			}
			set
			{
				if ((this._VendorType1 != value))
				{
					this.OnVendorType1Changing(value);
					this.SendPropertyChanging();
					this._VendorType1 = value;
					this.SendPropertyChanged("VendorType1");
					this.OnVendorType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorType_Vendor", Storage="_Vendors", ThisKey="VendorTypeId", OtherKey="VendorTypeId")]
		public EntitySet<Vendor> Vendors
		{
			get
			{
				return this._Vendors;
			}
			set
			{
				this._Vendors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.VendorType = this;
		}
		
		private void detach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.VendorType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendorCategory")]
	public partial class VendorCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorCategoryId;
		
		private string _VendorCategory1;
		
		private int _IsActive;
		
		private EntitySet<Vendor> _Vendors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorCategoryIdChanging(int value);
    partial void OnVendorCategoryIdChanged();
    partial void OnVendorCategory1Changing(string value);
    partial void OnVendorCategory1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public VendorCategory()
		{
			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorCategoryId
		{
			get
			{
				return this._VendorCategoryId;
			}
			set
			{
				if ((this._VendorCategoryId != value))
				{
					this.OnVendorCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._VendorCategoryId = value;
					this.SendPropertyChanged("VendorCategoryId");
					this.OnVendorCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VendorCategory", Storage="_VendorCategory1", DbType="VarChar(50)")]
		public string VendorCategory1
		{
			get
			{
				return this._VendorCategory1;
			}
			set
			{
				if ((this._VendorCategory1 != value))
				{
					this.OnVendorCategory1Changing(value);
					this.SendPropertyChanging();
					this._VendorCategory1 = value;
					this.SendPropertyChanged("VendorCategory1");
					this.OnVendorCategory1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorCategory_Vendor", Storage="_Vendors", ThisKey="VendorCategoryId", OtherKey="VendorCategoryId")]
		public EntitySet<Vendor> Vendors
		{
			get
			{
				return this._Vendors;
			}
			set
			{
				this._Vendors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.VendorCategory = this;
		}
		
		private void detach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.VendorCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trans")]
	public partial class Tran : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransId;
		
		private string _TransType;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransIdChanging(int value);
    partial void OnTransIdChanged();
    partial void OnTransTypeChanging(string value);
    partial void OnTransTypeChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Tran()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransId
		{
			get
			{
				return this._TransId;
			}
			set
			{
				if ((this._TransId != value))
				{
					this.OnTransIdChanging(value);
					this.SendPropertyChanging();
					this._TransId = value;
					this.SendPropertyChanged("TransId");
					this.OnTransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransType", DbType="NVarChar(50)")]
		public string TransType
		{
			get
			{
				return this._TransType;
			}
			set
			{
				if ((this._TransType != value))
				{
					this.OnTransTypeChanging(value);
					this.SendPropertyChanging();
					this._TransType = value;
					this.SendPropertyChanged("TransType");
					this.OnTransTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Titles")]
	public partial class Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TitleId;
		
		private string _Title1;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTitleIdChanging(int value);
    partial void OnTitleIdChanged();
    partial void OnTitle1Changing(string value);
    partial void OnTitle1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Title()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					this.OnTitleIdChanging(value);
					this.SendPropertyChanging();
					this._TitleId = value;
					this.SendPropertyChanged("TitleId");
					this.OnTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Title", Storage="_Title1", DbType="NVarChar(50)")]
		public string Title1
		{
			get
			{
				return this._Title1;
			}
			set
			{
				if ((this._Title1 != value))
				{
					this.OnTitle1Changing(value);
					this.SendPropertyChanging();
					this._Title1 = value;
					this.SendPropertyChanged("Title1");
					this.OnTitle1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateId;
		
		private System.Nullable<int> _CountryId;
		
		private string _StateCode;
		
		private string _State1;
		
		private System.Nullable<int> _IsActive;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnCountryIdChanging(System.Nullable<int> value);
    partial void OnCountryIdChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnState1Changing(string value);
    partial void OnState1Changed();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int")]
		public System.Nullable<int> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="NVarChar(50)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State", Storage="_State1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State1
		{
			get
			{
				return this._State1;
			}
			set
			{
				if ((this._State1 != value))
				{
					this.OnState1Changing(value);
					this.SendPropertyChanging();
					this._State1 = value;
					this.SendPropertyChanged("State1");
					this.OnState1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentTerm")]
	public partial class PaymentTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentTermId;
		
		private string _PaymentTerm1;
		
		private int _IsActive;
		
		private EntitySet<Buyer> _Buyers;
		
		private EntitySet<Vendor> _Vendors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentTermIdChanging(int value);
    partial void OnPaymentTermIdChanged();
    partial void OnPaymentTerm1Changing(string value);
    partial void OnPaymentTerm1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public PaymentTerm()
		{
			this._Buyers = new EntitySet<Buyer>(new Action<Buyer>(this.attach_Buyers), new Action<Buyer>(this.detach_Buyers));
			this._Vendors = new EntitySet<Vendor>(new Action<Vendor>(this.attach_Vendors), new Action<Vendor>(this.detach_Vendors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentTermId
		{
			get
			{
				return this._PaymentTermId;
			}
			set
			{
				if ((this._PaymentTermId != value))
				{
					this.OnPaymentTermIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermId = value;
					this.SendPropertyChanged("PaymentTermId");
					this.OnPaymentTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PaymentTerm", Storage="_PaymentTerm1", DbType="NVarChar(50)")]
		public string PaymentTerm1
		{
			get
			{
				return this._PaymentTerm1;
			}
			set
			{
				if ((this._PaymentTerm1 != value))
				{
					this.OnPaymentTerm1Changing(value);
					this.SendPropertyChanging();
					this._PaymentTerm1 = value;
					this.SendPropertyChanged("PaymentTerm1");
					this.OnPaymentTerm1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentTerm_Buyer", Storage="_Buyers", ThisKey="PaymentTermId", OtherKey="PaymentTermId")]
		public EntitySet<Buyer> Buyers
		{
			get
			{
				return this._Buyers;
			}
			set
			{
				this._Buyers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentTerm_Vendor", Storage="_Vendors", ThisKey="PaymentTermId", OtherKey="PaymentTermId")]
		public EntitySet<Vendor> Vendors
		{
			get
			{
				return this._Vendors;
			}
			set
			{
				this._Vendors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTerm = this;
		}
		
		private void detach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTerm = null;
		}
		
		private void attach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTerm = this;
		}
		
		private void detach_Vendors(Vendor entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayementFrequency")]
	public partial class PayementFrequency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PayementFrequencyId;
		
		private string _PayementFrequency1;
		
		private int _IsActive;
		
		private EntitySet<UtilityCompany> _UtilityCompanies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayementFrequencyIdChanging(int value);
    partial void OnPayementFrequencyIdChanged();
    partial void OnPayementFrequency1Changing(string value);
    partial void OnPayementFrequency1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public PayementFrequency()
		{
			this._UtilityCompanies = new EntitySet<UtilityCompany>(new Action<UtilityCompany>(this.attach_UtilityCompanies), new Action<UtilityCompany>(this.detach_UtilityCompanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayementFrequencyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PayementFrequencyId
		{
			get
			{
				return this._PayementFrequencyId;
			}
			set
			{
				if ((this._PayementFrequencyId != value))
				{
					this.OnPayementFrequencyIdChanging(value);
					this.SendPropertyChanging();
					this._PayementFrequencyId = value;
					this.SendPropertyChanged("PayementFrequencyId");
					this.OnPayementFrequencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PayementFrequency", Storage="_PayementFrequency1", DbType="NVarChar(50)")]
		public string PayementFrequency1
		{
			get
			{
				return this._PayementFrequency1;
			}
			set
			{
				if ((this._PayementFrequency1 != value))
				{
					this.OnPayementFrequency1Changing(value);
					this.SendPropertyChanging();
					this._PayementFrequency1 = value;
					this.SendPropertyChanged("PayementFrequency1");
					this.OnPayementFrequency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayementFrequency_UtilityCompany", Storage="_UtilityCompanies", ThisKey="PayementFrequencyId", OtherKey="PayementFrequencyId")]
		public EntitySet<UtilityCompany> UtilityCompanies
		{
			get
			{
				return this._UtilityCompanies;
			}
			set
			{
				this._UtilityCompanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UtilityCompanies(UtilityCompany entity)
		{
			this.SendPropertyChanging();
			entity.PayementFrequency = this;
		}
		
		private void detach_UtilityCompanies(UtilityCompany entity)
		{
			this.SendPropertyChanging();
			entity.PayementFrequency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobTitle")]
	public partial class JobTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobTitleId;
		
		private string _JobTitle1;
		
		private System.Nullable<int> _Sequence;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobTitleIdChanging(int value);
    partial void OnJobTitleIdChanged();
    partial void OnJobTitle1Changing(string value);
    partial void OnJobTitle1Changed();
    partial void OnSequenceChanging(System.Nullable<int> value);
    partial void OnSequenceChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public JobTitle()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobTitleId
		{
			get
			{
				return this._JobTitleId;
			}
			set
			{
				if ((this._JobTitleId != value))
				{
					this.OnJobTitleIdChanging(value);
					this.SendPropertyChanging();
					this._JobTitleId = value;
					this.SendPropertyChanged("JobTitleId");
					this.OnJobTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="JobTitle", Storage="_JobTitle1", DbType="NVarChar(50)")]
		public string JobTitle1
		{
			get
			{
				return this._JobTitle1;
			}
			set
			{
				if ((this._JobTitle1 != value))
				{
					this.OnJobTitle1Changing(value);
					this.SendPropertyChanging();
					this._JobTitle1 = value;
					this.SendPropertyChanged("JobTitle1");
					this.OnJobTitle1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int")]
		public System.Nullable<int> Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerType")]
	public partial class DealerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealerTypeId;
		
		private string _DealerType1;
		
		private int _IsActive;
		
		private EntitySet<Dealer> _Dealers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealerTypeIdChanging(int value);
    partial void OnDealerTypeIdChanged();
    partial void OnDealerType1Changing(string value);
    partial void OnDealerType1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public DealerType()
		{
			this._Dealers = new EntitySet<Dealer>(new Action<Dealer>(this.attach_Dealers), new Action<Dealer>(this.detach_Dealers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealerTypeId
		{
			get
			{
				return this._DealerTypeId;
			}
			set
			{
				if ((this._DealerTypeId != value))
				{
					this.OnDealerTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DealerTypeId = value;
					this.SendPropertyChanged("DealerTypeId");
					this.OnDealerTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DealerType", Storage="_DealerType1", DbType="NVarChar(50)")]
		public string DealerType1
		{
			get
			{
				return this._DealerType1;
			}
			set
			{
				if ((this._DealerType1 != value))
				{
					this.OnDealerType1Changing(value);
					this.SendPropertyChanging();
					this._DealerType1 = value;
					this.SendPropertyChanged("DealerType1");
					this.OnDealerType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerType_Dealer", Storage="_Dealers", ThisKey="DealerTypeId", OtherKey="DealerTypeId")]
		public EntitySet<Dealer> Dealers
		{
			get
			{
				return this._Dealers;
			}
			set
			{
				this._Dealers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dealers(Dealer entity)
		{
			this.SendPropertyChanging();
			entity.DealerType = this;
		}
		
		private void detach_Dealers(Dealer entity)
		{
			this.SendPropertyChanging();
			entity.DealerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerSource")]
	public partial class DealerSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealerSourceId;
		
		private string _Source;
		
		private int _IsActive;
		
		private EntitySet<Dealer> _Dealers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealerSourceIdChanging(int value);
    partial void OnDealerSourceIdChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public DealerSource()
		{
			this._Dealers = new EntitySet<Dealer>(new Action<Dealer>(this.attach_Dealers), new Action<Dealer>(this.detach_Dealers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerSourceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealerSourceId
		{
			get
			{
				return this._DealerSourceId;
			}
			set
			{
				if ((this._DealerSourceId != value))
				{
					this.OnDealerSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DealerSourceId = value;
					this.SendPropertyChanged("DealerSourceId");
					this.OnDealerSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerSource_Dealer", Storage="_Dealers", ThisKey="DealerSourceId", OtherKey="DealerSourceId")]
		public EntitySet<Dealer> Dealers
		{
			get
			{
				return this._Dealers;
			}
			set
			{
				this._Dealers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dealers(Dealer entity)
		{
			this.SendPropertyChanging();
			entity.DealerSource = this;
		}
		
		private void detach_Dealers(Dealer entity)
		{
			this.SendPropertyChanging();
			entity.DealerSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerCategory")]
	public partial class DealerCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealerCategoryId;
		
		private string _Category;
		
		private int _IsActive;
		
		private EntitySet<Dealer> _Dealers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealerCategoryIdChanging(int value);
    partial void OnDealerCategoryIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public DealerCategory()
		{
			this._Dealers = new EntitySet<Dealer>(new Action<Dealer>(this.attach_Dealers), new Action<Dealer>(this.detach_Dealers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealerCategoryId
		{
			get
			{
				return this._DealerCategoryId;
			}
			set
			{
				if ((this._DealerCategoryId != value))
				{
					this.OnDealerCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DealerCategoryId = value;
					this.SendPropertyChanged("DealerCategoryId");
					this.OnDealerCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerCategory_Dealer", Storage="_Dealers", ThisKey="DealerCategoryId", OtherKey="DealerCategoryId")]
		public EntitySet<Dealer> Dealers
		{
			get
			{
				return this._Dealers;
			}
			set
			{
				this._Dealers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dealers(Dealer entity)
		{
			this.SendPropertyChanging();
			entity.DealerCategory = this;
		}
		
		private void detach_Dealers(Dealer entity)
		{
			this.SendPropertyChanging();
			entity.DealerCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactType")]
	public partial class ContactType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ContactTypeId;
		
		private string _ContactType1;
		
		private System.Nullable<int> _Sequence;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactTypeIdChanging(long value);
    partial void OnContactTypeIdChanged();
    partial void OnContactType1Changing(string value);
    partial void OnContactType1Changed();
    partial void OnSequenceChanging(System.Nullable<int> value);
    partial void OnSequenceChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ContactType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTypeId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ContactTypeId
		{
			get
			{
				return this._ContactTypeId;
			}
			set
			{
				if ((this._ContactTypeId != value))
				{
					this.OnContactTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ContactTypeId = value;
					this.SendPropertyChanged("ContactTypeId");
					this.OnContactTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ContactType", Storage="_ContactType1", DbType="NVarChar(50)")]
		public string ContactType1
		{
			get
			{
				return this._ContactType1;
			}
			set
			{
				if ((this._ContactType1 != value))
				{
					this.OnContactType1Changing(value);
					this.SendPropertyChanging();
					this._ContactType1 = value;
					this.SendPropertyChanged("ContactType1");
					this.OnContactType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int")]
		public System.Nullable<int> Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyCategory")]
	public partial class CompanyCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyCategoryId;
		
		private string _CompanyCategory1;
		
		private int _IsActive;
		
		private EntitySet<UtilityCompany> _UtilityCompanies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyCategoryIdChanging(int value);
    partial void OnCompanyCategoryIdChanged();
    partial void OnCompanyCategory1Changing(string value);
    partial void OnCompanyCategory1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CompanyCategory()
		{
			this._UtilityCompanies = new EntitySet<UtilityCompany>(new Action<UtilityCompany>(this.attach_UtilityCompanies), new Action<UtilityCompany>(this.detach_UtilityCompanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyCategoryId
		{
			get
			{
				return this._CompanyCategoryId;
			}
			set
			{
				if ((this._CompanyCategoryId != value))
				{
					this.OnCompanyCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyCategoryId = value;
					this.SendPropertyChanged("CompanyCategoryId");
					this.OnCompanyCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CompanyCategory", Storage="_CompanyCategory1", DbType="NVarChar(50)")]
		public string CompanyCategory1
		{
			get
			{
				return this._CompanyCategory1;
			}
			set
			{
				if ((this._CompanyCategory1 != value))
				{
					this.OnCompanyCategory1Changing(value);
					this.SendPropertyChanging();
					this._CompanyCategory1 = value;
					this.SendPropertyChanged("CompanyCategory1");
					this.OnCompanyCategory1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyCategory_UtilityCompany", Storage="_UtilityCompanies", ThisKey="CompanyCategoryId", OtherKey="CompanyCategoryId")]
		public EntitySet<UtilityCompany> UtilityCompanies
		{
			get
			{
				return this._UtilityCompanies;
			}
			set
			{
				this._UtilityCompanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UtilityCompanies(UtilityCompany entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCategory = this;
		}
		
		private void detach_UtilityCompanies(UtilityCompany entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommissionType")]
	public partial class CommissionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionTypeId;
		
		private string _CommissionType1;
		
		private string _Description;
		
		private int _IsActive;
		
		private EntitySet<Buyer> _Buyers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionTypeIdChanging(int value);
    partial void OnCommissionTypeIdChanged();
    partial void OnCommissionType1Changing(string value);
    partial void OnCommissionType1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CommissionType()
		{
			this._Buyers = new EntitySet<Buyer>(new Action<Buyer>(this.attach_Buyers), new Action<Buyer>(this.detach_Buyers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CommissionTypeId
		{
			get
			{
				return this._CommissionTypeId;
			}
			set
			{
				if ((this._CommissionTypeId != value))
				{
					this.OnCommissionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CommissionTypeId = value;
					this.SendPropertyChanged("CommissionTypeId");
					this.OnCommissionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CommissionType", Storage="_CommissionType1", DbType="VarChar(50)")]
		public string CommissionType1
		{
			get
			{
				return this._CommissionType1;
			}
			set
			{
				if ((this._CommissionType1 != value))
				{
					this.OnCommissionType1Changing(value);
					this.SendPropertyChanging();
					this._CommissionType1 = value;
					this.SendPropertyChanged("CommissionType1");
					this.OnCommissionType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommissionType_Buyer", Storage="_Buyers", ThisKey="CommissionTypeId", OtherKey="CommissionTypeId")]
		public EntitySet<Buyer> Buyers
		{
			get
			{
				return this._Buyers;
			}
			set
			{
				this._Buyers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.CommissionType = this;
		}
		
		private void detach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.CommissionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommissionTerm")]
	public partial class CommissionTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommissionTermId;
		
		private string _CommissionTerm1;
		
		private int _IsActive;
		
		private EntitySet<Buyer> _Buyers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommissionTermIdChanging(int value);
    partial void OnCommissionTermIdChanged();
    partial void OnCommissionTerm1Changing(string value);
    partial void OnCommissionTerm1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CommissionTerm()
		{
			this._Buyers = new EntitySet<Buyer>(new Action<Buyer>(this.attach_Buyers), new Action<Buyer>(this.detach_Buyers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionTermId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CommissionTermId
		{
			get
			{
				return this._CommissionTermId;
			}
			set
			{
				if ((this._CommissionTermId != value))
				{
					this.OnCommissionTermIdChanging(value);
					this.SendPropertyChanging();
					this._CommissionTermId = value;
					this.SendPropertyChanged("CommissionTermId");
					this.OnCommissionTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CommissionTerm", Storage="_CommissionTerm1", DbType="NVarChar(50)")]
		public string CommissionTerm1
		{
			get
			{
				return this._CommissionTerm1;
			}
			set
			{
				if ((this._CommissionTerm1 != value))
				{
					this.OnCommissionTerm1Changing(value);
					this.SendPropertyChanging();
					this._CommissionTerm1 = value;
					this.SendPropertyChanged("CommissionTerm1");
					this.OnCommissionTerm1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommissionTerm_Buyer", Storage="_Buyers", ThisKey="CommissionTermId", OtherKey="CommissionTermId")]
		public EntitySet<Buyer> Buyers
		{
			get
			{
				return this._Buyers;
			}
			set
			{
				this._Buyers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.CommissionTerm = this;
		}
		
		private void detach_Buyers(Buyer entity)
		{
			this.SendPropertyChanging();
			entity.CommissionTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentTypeId;
		
		private string _DocumentType1;
		
		private System.Nullable<int> _EntityTypeId;
		
		private System.Nullable<int> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentTypeIdChanging(int value);
    partial void OnDocumentTypeIdChanged();
    partial void OnDocumentType1Changing(string value);
    partial void OnDocumentType1Changed();
    partial void OnEntityTypeIdChanging(System.Nullable<int> value);
    partial void OnEntityTypeIdChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public DocumentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentTypeId
		{
			get
			{
				return this._DocumentTypeId;
			}
			set
			{
				if ((this._DocumentTypeId != value))
				{
					this.OnDocumentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeId = value;
					this.SendPropertyChanged("DocumentTypeId");
					this.OnDocumentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DocumentType", Storage="_DocumentType1", DbType="NVarChar(50)")]
		public string DocumentType1
		{
			get
			{
				return this._DocumentType1;
			}
			set
			{
				if ((this._DocumentType1 != value))
				{
					this.OnDocumentType1Changing(value);
					this.SendPropertyChanging();
					this._DocumentType1 = value;
					this.SendPropertyChanged("DocumentType1");
					this.OnDocumentType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeId", DbType="Int")]
		public System.Nullable<int> EntityTypeId
		{
			get
			{
				return this._EntityTypeId;
			}
			set
			{
				if ((this._EntityTypeId != value))
				{
					this.OnEntityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeId = value;
					this.SendPropertyChanged("EntityTypeId");
					this.OnEntityTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityGroupRight")]
	public partial class SecurityGroupRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SecurityGroupRightId;
		
		private long _SecurityGroupId;
		
		private long _SecurityRightID;
		
		private EntityRef<SecurityRight> _SecurityRight;
		
		private EntityRef<SecurityGroup> _SecurityGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecurityGroupRightIdChanging(long value);
    partial void OnSecurityGroupRightIdChanged();
    partial void OnSecurityGroupIdChanging(long value);
    partial void OnSecurityGroupIdChanged();
    partial void OnSecurityRightIDChanging(long value);
    partial void OnSecurityRightIDChanged();
    #endregion
		
		public SecurityGroupRight()
		{
			this._SecurityRight = default(EntityRef<SecurityRight>);
			this._SecurityGroup = default(EntityRef<SecurityGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupRightId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SecurityGroupRightId
		{
			get
			{
				return this._SecurityGroupRightId;
			}
			set
			{
				if ((this._SecurityGroupRightId != value))
				{
					this.OnSecurityGroupRightIdChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupRightId = value;
					this.SendPropertyChanged("SecurityGroupRightId");
					this.OnSecurityGroupRightIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupId", DbType="BigInt NOT NULL")]
		public long SecurityGroupId
		{
			get
			{
				return this._SecurityGroupId;
			}
			set
			{
				if ((this._SecurityGroupId != value))
				{
					if (this._SecurityGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupId = value;
					this.SendPropertyChanged("SecurityGroupId");
					this.OnSecurityGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRightID", DbType="BigInt NOT NULL")]
		public long SecurityRightID
		{
			get
			{
				return this._SecurityRightID;
			}
			set
			{
				if ((this._SecurityRightID != value))
				{
					if (this._SecurityRight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityRightIDChanging(value);
					this.SendPropertyChanging();
					this._SecurityRightID = value;
					this.SendPropertyChanged("SecurityRightID");
					this.OnSecurityRightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRight_SecurityGroupRight", Storage="_SecurityRight", ThisKey="SecurityRightID", OtherKey="SecurityRightID", IsForeignKey=true)]
		public SecurityRight SecurityRight
		{
			get
			{
				return this._SecurityRight.Entity;
			}
			set
			{
				SecurityRight previousValue = this._SecurityRight.Entity;
				if (((previousValue != value) 
							|| (this._SecurityRight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityRight.Entity = null;
						previousValue.SecurityGroupRights.Remove(this);
					}
					this._SecurityRight.Entity = value;
					if ((value != null))
					{
						value.SecurityGroupRights.Add(this);
						this._SecurityRightID = value.SecurityRightID;
					}
					else
					{
						this._SecurityRightID = default(long);
					}
					this.SendPropertyChanged("SecurityRight");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityGroup_SecurityGroupRight", Storage="_SecurityGroup", ThisKey="SecurityGroupId", OtherKey="SecurityGroupId", IsForeignKey=true)]
		public SecurityGroup SecurityGroup
		{
			get
			{
				return this._SecurityGroup.Entity;
			}
			set
			{
				SecurityGroup previousValue = this._SecurityGroup.Entity;
				if (((previousValue != value) 
							|| (this._SecurityGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityGroup.Entity = null;
						previousValue.SecurityGroupRights.Remove(this);
					}
					this._SecurityGroup.Entity = value;
					if ((value != null))
					{
						value.SecurityGroupRights.Add(this);
						this._SecurityGroupId = value.SecurityGroupId;
					}
					else
					{
						this._SecurityGroupId = default(long);
					}
					this.SendPropertyChanged("SecurityGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityRight")]
	public partial class SecurityRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SecurityRightID;
		
		private string _RightName;
		
		private string _RightDesc;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private EntitySet<SecurityGroupRight> _SecurityGroupRights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecurityRightIDChanging(long value);
    partial void OnSecurityRightIDChanged();
    partial void OnRightNameChanging(string value);
    partial void OnRightNameChanged();
    partial void OnRightDescChanging(string value);
    partial void OnRightDescChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public SecurityRight()
		{
			this._SecurityGroupRights = new EntitySet<SecurityGroupRight>(new Action<SecurityGroupRight>(this.attach_SecurityGroupRights), new Action<SecurityGroupRight>(this.detach_SecurityGroupRights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRightID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long SecurityRightID
		{
			get
			{
				return this._SecurityRightID;
			}
			set
			{
				if ((this._SecurityRightID != value))
				{
					this.OnSecurityRightIDChanging(value);
					this.SendPropertyChanging();
					this._SecurityRightID = value;
					this.SendPropertyChanged("SecurityRightID");
					this.OnSecurityRightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RightName
		{
			get
			{
				return this._RightName;
			}
			set
			{
				if ((this._RightName != value))
				{
					this.OnRightNameChanging(value);
					this.SendPropertyChanging();
					this._RightName = value;
					this.SendPropertyChanged("RightName");
					this.OnRightNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightDesc", DbType="NVarChar(255)")]
		public string RightDesc
		{
			get
			{
				return this._RightDesc;
			}
			set
			{
				if ((this._RightDesc != value))
				{
					this.OnRightDescChanging(value);
					this.SendPropertyChanging();
					this._RightDesc = value;
					this.SendPropertyChanged("RightDesc");
					this.OnRightDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRight_SecurityGroupRight", Storage="_SecurityGroupRights", ThisKey="SecurityRightID", OtherKey="SecurityRightID")]
		public EntitySet<SecurityGroupRight> SecurityGroupRights
		{
			get
			{
				return this._SecurityGroupRights;
			}
			set
			{
				this._SecurityGroupRights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecurityGroupRights(SecurityGroupRight entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRight = this;
		}
		
		private void detach_SecurityGroupRights(SecurityGroupRight entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRight = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VendorId;
		
		private string _VendorName;
		
		private string _VendorDIN;
		
		private System.Nullable<int> _VendorCategoryId;
		
		private System.Nullable<int> _VendorTypeId;
		
		private string _TaxIdNumber;
		
		private System.Nullable<int> _PaymentTermId;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<bool> _ExpenseAutoApproval;
		
		private System.Nullable<short> _TransExpenseCalculationMethod;
		
		private System.Nullable<short> _OrgID;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<PaymentTerm> _PaymentTerm;
		
		private EntityRef<VendorCategory> _VendorCategory;
		
		private EntityRef<VendorType> _VendorType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorIdChanging(long value);
    partial void OnVendorIdChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnVendorDINChanging(string value);
    partial void OnVendorDINChanged();
    partial void OnVendorCategoryIdChanging(System.Nullable<int> value);
    partial void OnVendorCategoryIdChanged();
    partial void OnVendorTypeIdChanging(System.Nullable<int> value);
    partial void OnVendorTypeIdChanged();
    partial void OnTaxIdNumberChanging(string value);
    partial void OnTaxIdNumberChanged();
    partial void OnPaymentTermIdChanging(System.Nullable<int> value);
    partial void OnPaymentTermIdChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnExpenseAutoApprovalChanging(System.Nullable<bool> value);
    partial void OnExpenseAutoApprovalChanged();
    partial void OnTransExpenseCalculationMethodChanging(System.Nullable<short> value);
    partial void OnTransExpenseCalculationMethodChanged();
    partial void OnOrgIDChanging(System.Nullable<short> value);
    partial void OnOrgIDChanged();
    #endregion
		
		public Vendor()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._PaymentTerm = default(EntityRef<PaymentTerm>);
			this._VendorCategory = default(EntityRef<VendorCategory>);
			this._VendorType = default(EntityRef<VendorType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					this.OnVendorIdChanging(value);
					this.SendPropertyChanging();
					this._VendorId = value;
					this.SendPropertyChanged("VendorId");
					this.OnVendorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorDIN", DbType="NVarChar(50)")]
		public string VendorDIN
		{
			get
			{
				return this._VendorDIN;
			}
			set
			{
				if ((this._VendorDIN != value))
				{
					this.OnVendorDINChanging(value);
					this.SendPropertyChanging();
					this._VendorDIN = value;
					this.SendPropertyChanged("VendorDIN");
					this.OnVendorDINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorCategoryId", DbType="Int")]
		public System.Nullable<int> VendorCategoryId
		{
			get
			{
				return this._VendorCategoryId;
			}
			set
			{
				if ((this._VendorCategoryId != value))
				{
					if (this._VendorCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._VendorCategoryId = value;
					this.SendPropertyChanged("VendorCategoryId");
					this.OnVendorCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorTypeId", DbType="Int")]
		public System.Nullable<int> VendorTypeId
		{
			get
			{
				return this._VendorTypeId;
			}
			set
			{
				if ((this._VendorTypeId != value))
				{
					if (this._VendorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VendorTypeId = value;
					this.SendPropertyChanged("VendorTypeId");
					this.OnVendorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIdNumber", DbType="NVarChar(50)")]
		public string TaxIdNumber
		{
			get
			{
				return this._TaxIdNumber;
			}
			set
			{
				if ((this._TaxIdNumber != value))
				{
					this.OnTaxIdNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxIdNumber = value;
					this.SendPropertyChanged("TaxIdNumber");
					this.OnTaxIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermId", DbType="Int")]
		public System.Nullable<int> PaymentTermId
		{
			get
			{
				return this._PaymentTermId;
			}
			set
			{
				if ((this._PaymentTermId != value))
				{
					if (this._PaymentTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTermIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermId = value;
					this.SendPropertyChanged("PaymentTermId");
					this.OnPaymentTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(500)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAutoApproval", DbType="Bit")]
		public System.Nullable<bool> ExpenseAutoApproval
		{
			get
			{
				return this._ExpenseAutoApproval;
			}
			set
			{
				if ((this._ExpenseAutoApproval != value))
				{
					this.OnExpenseAutoApprovalChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAutoApproval = value;
					this.SendPropertyChanged("ExpenseAutoApproval");
					this.OnExpenseAutoApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransExpenseCalculationMethod", DbType="SmallInt")]
		public System.Nullable<short> TransExpenseCalculationMethod
		{
			get
			{
				return this._TransExpenseCalculationMethod;
			}
			set
			{
				if ((this._TransExpenseCalculationMethod != value))
				{
					this.OnTransExpenseCalculationMethodChanging(value);
					this.SendPropertyChanging();
					this._TransExpenseCalculationMethod = value;
					this.SendPropertyChanged("TransExpenseCalculationMethod");
					this.OnTransExpenseCalculationMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_Address", Storage="_Addresses", ThisKey="VendorId", OtherKey="EntityId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentTerm_Vendor", Storage="_PaymentTerm", ThisKey="PaymentTermId", OtherKey="PaymentTermId", IsForeignKey=true)]
		public PaymentTerm PaymentTerm
		{
			get
			{
				return this._PaymentTerm.Entity;
			}
			set
			{
				PaymentTerm previousValue = this._PaymentTerm.Entity;
				if (((previousValue != value) 
							|| (this._PaymentTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentTerm.Entity = null;
						previousValue.Vendors.Remove(this);
					}
					this._PaymentTerm.Entity = value;
					if ((value != null))
					{
						value.Vendors.Add(this);
						this._PaymentTermId = value.PaymentTermId;
					}
					else
					{
						this._PaymentTermId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorCategory_Vendor", Storage="_VendorCategory", ThisKey="VendorCategoryId", OtherKey="VendorCategoryId", IsForeignKey=true)]
		public VendorCategory VendorCategory
		{
			get
			{
				return this._VendorCategory.Entity;
			}
			set
			{
				VendorCategory previousValue = this._VendorCategory.Entity;
				if (((previousValue != value) 
							|| (this._VendorCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VendorCategory.Entity = null;
						previousValue.Vendors.Remove(this);
					}
					this._VendorCategory.Entity = value;
					if ((value != null))
					{
						value.Vendors.Add(this);
						this._VendorCategoryId = value.VendorCategoryId;
					}
					else
					{
						this._VendorCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VendorCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VendorType_Vendor", Storage="_VendorType", ThisKey="VendorTypeId", OtherKey="VendorTypeId", IsForeignKey=true)]
		public VendorType VendorType
		{
			get
			{
				return this._VendorType.Entity;
			}
			set
			{
				VendorType previousValue = this._VendorType.Entity;
				if (((previousValue != value) 
							|| (this._VendorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VendorType.Entity = null;
						previousValue.Vendors.Remove(this);
					}
					this._VendorType.Entity = value;
					if ((value != null))
					{
						value.Vendors.Add(this);
						this._VendorTypeId = value.VendorTypeId;
					}
					else
					{
						this._VendorTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VendorType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UtilityCompany")]
	public partial class UtilityCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UtilityCompanyId;
		
		private string _CompanyName;
		
		private string _TaxIdNumber;
		
		private System.Nullable<int> _CompanyCategoryId;
		
		private System.Nullable<int> _PayementFrequencyId;
		
		private string _AccountNumber;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<short> _OrgID;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<CompanyCategory> _CompanyCategory;
		
		private EntityRef<PayementFrequency> _PayementFrequency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUtilityCompanyIdChanging(long value);
    partial void OnUtilityCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnTaxIdNumberChanging(string value);
    partial void OnTaxIdNumberChanged();
    partial void OnCompanyCategoryIdChanging(System.Nullable<int> value);
    partial void OnCompanyCategoryIdChanged();
    partial void OnPayementFrequencyIdChanging(System.Nullable<int> value);
    partial void OnPayementFrequencyIdChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnOrgIDChanging(System.Nullable<short> value);
    partial void OnOrgIDChanged();
    #endregion
		
		public UtilityCompany()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._CompanyCategory = default(EntityRef<CompanyCategory>);
			this._PayementFrequency = default(EntityRef<PayementFrequency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtilityCompanyId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long UtilityCompanyId
		{
			get
			{
				return this._UtilityCompanyId;
			}
			set
			{
				if ((this._UtilityCompanyId != value))
				{
					this.OnUtilityCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._UtilityCompanyId = value;
					this.SendPropertyChanged("UtilityCompanyId");
					this.OnUtilityCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIdNumber", DbType="NVarChar(50)")]
		public string TaxIdNumber
		{
			get
			{
				return this._TaxIdNumber;
			}
			set
			{
				if ((this._TaxIdNumber != value))
				{
					this.OnTaxIdNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxIdNumber = value;
					this.SendPropertyChanged("TaxIdNumber");
					this.OnTaxIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCategoryId", DbType="Int")]
		public System.Nullable<int> CompanyCategoryId
		{
			get
			{
				return this._CompanyCategoryId;
			}
			set
			{
				if ((this._CompanyCategoryId != value))
				{
					if (this._CompanyCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyCategoryId = value;
					this.SendPropertyChanged("CompanyCategoryId");
					this.OnCompanyCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayementFrequencyId", DbType="Int")]
		public System.Nullable<int> PayementFrequencyId
		{
			get
			{
				return this._PayementFrequencyId;
			}
			set
			{
				if ((this._PayementFrequencyId != value))
				{
					if (this._PayementFrequency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayementFrequencyIdChanging(value);
					this.SendPropertyChanging();
					this._PayementFrequencyId = value;
					this.SendPropertyChanged("PayementFrequencyId");
					this.OnPayementFrequencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(25)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(200)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UtilityCompany_Address", Storage="_Addresses", ThisKey="UtilityCompanyId", OtherKey="EntityId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyCategory_UtilityCompany", Storage="_CompanyCategory", ThisKey="CompanyCategoryId", OtherKey="CompanyCategoryId", IsForeignKey=true)]
		public CompanyCategory CompanyCategory
		{
			get
			{
				return this._CompanyCategory.Entity;
			}
			set
			{
				CompanyCategory previousValue = this._CompanyCategory.Entity;
				if (((previousValue != value) 
							|| (this._CompanyCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyCategory.Entity = null;
						previousValue.UtilityCompanies.Remove(this);
					}
					this._CompanyCategory.Entity = value;
					if ((value != null))
					{
						value.UtilityCompanies.Add(this);
						this._CompanyCategoryId = value.CompanyCategoryId;
					}
					else
					{
						this._CompanyCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompanyCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayementFrequency_UtilityCompany", Storage="_PayementFrequency", ThisKey="PayementFrequencyId", OtherKey="PayementFrequencyId", IsForeignKey=true)]
		public PayementFrequency PayementFrequency
		{
			get
			{
				return this._PayementFrequency.Entity;
			}
			set
			{
				PayementFrequency previousValue = this._PayementFrequency.Entity;
				if (((previousValue != value) 
							|| (this._PayementFrequency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayementFrequency.Entity = null;
						previousValue.UtilityCompanies.Remove(this);
					}
					this._PayementFrequency.Entity = value;
					if ((value != null))
					{
						value.UtilityCompanies.Add(this);
						this._PayementFrequencyId = value.PayementFrequencyId;
					}
					else
					{
						this._PayementFrequencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PayementFrequency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.UtilityCompany = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.UtilityCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EmployeeId;
		
		private System.Nullable<int> _TitleId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _EmployeeCode;
		
		private System.Nullable<int> _EmployeeTypeId;
		
		private string _CellPhone;
		
		private System.Nullable<int> _DriverLicenseStateId;
		
		private string _DriverLicenseNumber;
		
		private System.Nullable<System.DateTime> _DriverLicensExpDate;
		
		private string _SpecialPayrollConditions;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<short> _OrgID;
		
		private EntitySet<Address> _Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(long value);
    partial void OnEmployeeIdChanged();
    partial void OnTitleIdChanging(System.Nullable<int> value);
    partial void OnTitleIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnEmployeeTypeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeTypeIdChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnDriverLicenseStateIdChanging(System.Nullable<int> value);
    partial void OnDriverLicenseStateIdChanged();
    partial void OnDriverLicenseNumberChanging(string value);
    partial void OnDriverLicenseNumberChanged();
    partial void OnDriverLicensExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDriverLicensExpDateChanged();
    partial void OnSpecialPayrollConditionsChanging(string value);
    partial void OnSpecialPayrollConditionsChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnOrgIDChanging(System.Nullable<short> value);
    partial void OnOrgIDChanged();
    #endregion
		
		public Employee()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int")]
		public System.Nullable<int> TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					this.OnTitleIdChanging(value);
					this.SendPropertyChanging();
					this._TitleId = value;
					this.SendPropertyChanged("TitleId");
					this.OnTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeId", DbType="Int")]
		public System.Nullable<int> EmployeeTypeId
		{
			get
			{
				return this._EmployeeTypeId;
			}
			set
			{
				if ((this._EmployeeTypeId != value))
				{
					this.OnEmployeeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeId = value;
					this.SendPropertyChanged("EmployeeTypeId");
					this.OnEmployeeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(50)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverLicenseStateId", DbType="Int")]
		public System.Nullable<int> DriverLicenseStateId
		{
			get
			{
				return this._DriverLicenseStateId;
			}
			set
			{
				if ((this._DriverLicenseStateId != value))
				{
					this.OnDriverLicenseStateIdChanging(value);
					this.SendPropertyChanging();
					this._DriverLicenseStateId = value;
					this.SendPropertyChanged("DriverLicenseStateId");
					this.OnDriverLicenseStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverLicenseNumber", DbType="NVarChar(50)")]
		public string DriverLicenseNumber
		{
			get
			{
				return this._DriverLicenseNumber;
			}
			set
			{
				if ((this._DriverLicenseNumber != value))
				{
					this.OnDriverLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._DriverLicenseNumber = value;
					this.SendPropertyChanged("DriverLicenseNumber");
					this.OnDriverLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverLicensExpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DriverLicensExpDate
		{
			get
			{
				return this._DriverLicensExpDate;
			}
			set
			{
				if ((this._DriverLicensExpDate != value))
				{
					this.OnDriverLicensExpDateChanging(value);
					this.SendPropertyChanging();
					this._DriverLicensExpDate = value;
					this.SendPropertyChanged("DriverLicensExpDate");
					this.OnDriverLicensExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialPayrollConditions", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SpecialPayrollConditions
		{
			get
			{
				return this._SpecialPayrollConditions;
			}
			set
			{
				if ((this._SpecialPayrollConditions != value))
				{
					this.OnSpecialPayrollConditionsChanging(value);
					this.SendPropertyChanging();
					this._SpecialPayrollConditions = value;
					this.SendPropertyChanged("SpecialPayrollConditions");
					this.OnSpecialPayrollConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Address", Storage="_Addresses", ThisKey="EmployeeId", OtherKey="EntityId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeType")]
	public partial class EmployeeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeTypeId;
		
		private string _EmployeeType1;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeTypeIdChanging(int value);
    partial void OnEmployeeTypeIdChanged();
    partial void OnEmployeeType1Changing(string value);
    partial void OnEmployeeType1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public EmployeeType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeTypeId
		{
			get
			{
				return this._EmployeeTypeId;
			}
			set
			{
				if ((this._EmployeeTypeId != value))
				{
					this.OnEmployeeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeId = value;
					this.SendPropertyChanged("EmployeeTypeId");
					this.OnEmployeeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EmployeeType", Storage="_EmployeeType1", DbType="NVarChar(50)")]
		public string EmployeeType1
		{
			get
			{
				return this._EmployeeType1;
			}
			set
			{
				if ((this._EmployeeType1 != value))
				{
					this.OnEmployeeType1Changing(value);
					this.SendPropertyChanging();
					this._EmployeeType1 = value;
					this.SendPropertyChanged("EmployeeType1");
					this.OnEmployeeType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityGroup")]
	public partial class SecurityGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SecurityGroupId;
		
		private string _GroupName;
		
		private string _GroupDesc;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<bool> _IsSystemDefault;
		
		private EntitySet<SecurityGroupRight> _SecurityGroupRights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecurityGroupIdChanging(long value);
    partial void OnSecurityGroupIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnGroupDescChanging(string value);
    partial void OnGroupDescChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnIsSystemDefaultChanging(System.Nullable<bool> value);
    partial void OnIsSystemDefaultChanged();
    #endregion
		
		public SecurityGroup()
		{
			this._SecurityGroupRights = new EntitySet<SecurityGroupRight>(new Action<SecurityGroupRight>(this.attach_SecurityGroupRights), new Action<SecurityGroupRight>(this.detach_SecurityGroupRights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SecurityGroupId
		{
			get
			{
				return this._SecurityGroupId;
			}
			set
			{
				if ((this._SecurityGroupId != value))
				{
					this.OnSecurityGroupIdChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupId = value;
					this.SendPropertyChanged("SecurityGroupId");
					this.OnSecurityGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDesc", DbType="NVarChar(255)")]
		public string GroupDesc
		{
			get
			{
				return this._GroupDesc;
			}
			set
			{
				if ((this._GroupDesc != value))
				{
					this.OnGroupDescChanging(value);
					this.SendPropertyChanging();
					this._GroupDesc = value;
					this.SendPropertyChanged("GroupDesc");
					this.OnGroupDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemDefault", DbType="Bit")]
		public System.Nullable<bool> IsSystemDefault
		{
			get
			{
				return this._IsSystemDefault;
			}
			set
			{
				if ((this._IsSystemDefault != value))
				{
					this.OnIsSystemDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsSystemDefault = value;
					this.SendPropertyChanged("IsSystemDefault");
					this.OnIsSystemDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityGroup_SecurityGroupRight", Storage="_SecurityGroupRights", ThisKey="SecurityGroupId", OtherKey="SecurityGroupId")]
		public EntitySet<SecurityGroupRight> SecurityGroupRights
		{
			get
			{
				return this._SecurityGroupRights;
			}
			set
			{
				this._SecurityGroupRights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecurityGroupRights(SecurityGroupRight entity)
		{
			this.SendPropertyChanging();
			entity.SecurityGroup = this;
		}
		
		private void detach_SecurityGroupRights(SecurityGroupRight entity)
		{
			this.SendPropertyChanging();
			entity.SecurityGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginHistory")]
	public partial class LoginHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LoginHistoryId;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private string _IPAddress;
		
		private System.Nullable<bool> _IsSuccess;
		
		private string _LogInId;
		
		private string _Password;
		
		private System.Nullable<int> _IsActive;
		
		private string _LoginFrom;
		
		private string _SessionID;
		
		private System.Nullable<System.DateTime> _LogOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginHistoryIdChanging(long value);
    partial void OnLoginHistoryIdChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnIsSuccessChanging(System.Nullable<bool> value);
    partial void OnIsSuccessChanged();
    partial void OnLogInIdChanging(string value);
    partial void OnLogInIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    partial void OnLoginFromChanging(string value);
    partial void OnLoginFromChanged();
    partial void OnSessionIDChanging(string value);
    partial void OnSessionIDChanged();
    partial void OnLogOutChanging(System.Nullable<System.DateTime> value);
    partial void OnLogOutChanged();
    #endregion
		
		public LoginHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginHistoryId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LoginHistoryId
		{
			get
			{
				return this._LoginHistoryId;
			}
			set
			{
				if ((this._LoginHistoryId != value))
				{
					this.OnLoginHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._LoginHistoryId = value;
					this.SendPropertyChanged("LoginHistoryId");
					this.OnLoginHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit")]
		public System.Nullable<bool> IsSuccess
		{
			get
			{
				return this._IsSuccess;
			}
			set
			{
				if ((this._IsSuccess != value))
				{
					this.OnIsSuccessChanging(value);
					this.SendPropertyChanging();
					this._IsSuccess = value;
					this.SendPropertyChanged("IsSuccess");
					this.OnIsSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogInId", DbType="NVarChar(50)")]
		public string LogInId
		{
			get
			{
				return this._LogInId;
			}
			set
			{
				if ((this._LogInId != value))
				{
					this.OnLogInIdChanging(value);
					this.SendPropertyChanging();
					this._LogInId = value;
					this.SendPropertyChanged("LogInId");
					this.OnLogInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginFrom", DbType="NVarChar(20)")]
		public string LoginFrom
		{
			get
			{
				return this._LoginFrom;
			}
			set
			{
				if ((this._LoginFrom != value))
				{
					this.OnLoginFromChanging(value);
					this.SendPropertyChanging();
					this._LoginFrom = value;
					this.SendPropertyChanged("LoginFrom");
					this.OnLoginFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="VarChar(50)")]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this.OnSessionIDChanging(value);
					this.SendPropertyChanging();
					this._SessionID = value;
					this.SendPropertyChanged("SessionID");
					this.OnSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogOut
		{
			get
			{
				return this._LogOut;
			}
			set
			{
				if ((this._LogOut != value))
				{
					this.OnLogOutChanging(value);
					this.SendPropertyChanging();
					this._LogOut = value;
					this.SendPropertyChanged("LogOut");
					this.OnLogOutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LookupTables")]
	public partial class LookupTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LookupTableId;
		
		private string _TableName;
		
		private string _ShowColumns;
		
		private System.Nullable<bool> _IsReadWrite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLookupTableIdChanging(long value);
    partial void OnLookupTableIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnShowColumnsChanging(string value);
    partial void OnShowColumnsChanged();
    partial void OnIsReadWriteChanging(System.Nullable<bool> value);
    partial void OnIsReadWriteChanged();
    #endregion
		
		public LookupTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupTableId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LookupTableId
		{
			get
			{
				return this._LookupTableId;
			}
			set
			{
				if ((this._LookupTableId != value))
				{
					this.OnLookupTableIdChanging(value);
					this.SendPropertyChanging();
					this._LookupTableId = value;
					this.SendPropertyChanged("LookupTableId");
					this.OnLookupTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(100)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowColumns", DbType="VarChar(100)")]
		public string ShowColumns
		{
			get
			{
				return this._ShowColumns;
			}
			set
			{
				if ((this._ShowColumns != value))
				{
					this.OnShowColumnsChanging(value);
					this.SendPropertyChanging();
					this._ShowColumns = value;
					this.SendPropertyChanged("ShowColumns");
					this.OnShowColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadWrite", DbType="Bit")]
		public System.Nullable<bool> IsReadWrite
		{
			get
			{
				return this._IsReadWrite;
			}
			set
			{
				if ((this._IsReadWrite != value))
				{
					this.OnIsReadWriteChanging(value);
					this.SendPropertyChanging();
					this._IsReadWrite = value;
					this.SendPropertyChanged("IsReadWrite");
					this.OnIsReadWriteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankId;
		
		private string _BankName;
		
		private string _BankPhone;
		
		private string _BankContact;
		
		private string _BankABA;
		
		private System.DateTime _DateAdded;
		
		private long _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankIdChanging(int value);
    partial void OnBankIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankPhoneChanging(string value);
    partial void OnBankPhoneChanged();
    partial void OnBankContactChanging(string value);
    partial void OnBankContactChanged();
    partial void OnBankABAChanging(string value);
    partial void OnBankABAChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(long value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Bank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankPhone", DbType="NVarChar(20)")]
		public string BankPhone
		{
			get
			{
				return this._BankPhone;
			}
			set
			{
				if ((this._BankPhone != value))
				{
					this.OnBankPhoneChanging(value);
					this.SendPropertyChanging();
					this._BankPhone = value;
					this.SendPropertyChanged("BankPhone");
					this.OnBankPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankContact", DbType="NVarChar(50)")]
		public string BankContact
		{
			get
			{
				return this._BankContact;
			}
			set
			{
				if ((this._BankContact != value))
				{
					this.OnBankContactChanging(value);
					this.SendPropertyChanging();
					this._BankContact = value;
					this.SendPropertyChanged("BankContact");
					this.OnBankContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankABA", DbType="NVarChar(50)")]
		public string BankABA
		{
			get
			{
				return this._BankABA;
			}
			set
			{
				if ((this._BankABA != value))
				{
					this.OnBankABAChanging(value);
					this.SendPropertyChanging();
					this._BankABA = value;
					this.SendPropertyChanged("BankABA");
					this.OnBankABAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt NOT NULL")]
		public long AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupStatus")]
	public partial class GroupStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupStatusId;
		
		private string _GroupStatus1;
		
		private int _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupStatusIdChanging(int value);
    partial void OnGroupStatusIdChanged();
    partial void OnGroupStatus1Changing(string value);
    partial void OnGroupStatus1Changed();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    #endregion
		
		public GroupStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupStatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupStatusId
		{
			get
			{
				return this._GroupStatusId;
			}
			set
			{
				if ((this._GroupStatusId != value))
				{
					this.OnGroupStatusIdChanging(value);
					this.SendPropertyChanging();
					this._GroupStatusId = value;
					this.SendPropertyChanged("GroupStatusId");
					this.OnGroupStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GroupStatus", Storage="_GroupStatus1", DbType="NVarChar(50)")]
		public string GroupStatus1
		{
			get
			{
				return this._GroupStatus1;
			}
			set
			{
				if ((this._GroupStatus1 != value))
				{
					this.OnGroupStatus1Changing(value);
					this.SendPropertyChanging();
					this._GroupStatus1 = value;
					this.SendPropertyChanged("GroupStatus1");
					this.OnGroupStatus1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation")]
	public partial class Organisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _OrgID;
		
		private string _Organisation1;
		
		private string _OrgCode;
		
		private string _Website;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<long> _CCMID;
		
		private System.Nullable<long> _RHASIWebsiteDealerID;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private System.Nullable<short> _IsActive;
		
		private System.Nullable<bool> _AllowLaneAutomation;
		
		private System.Nullable<bool> _AllowMAA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(short value);
    partial void OnOrgIDChanged();
    partial void OnOrganisation1Changing(string value);
    partial void OnOrganisation1Changed();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCCMIDChanging(System.Nullable<long> value);
    partial void OnCCMIDChanged();
    partial void OnRHASIWebsiteDealerIDChanging(System.Nullable<long> value);
    partial void OnRHASIWebsiteDealerIDChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<long> value);
    partial void OnAddedByChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(System.Nullable<long> value);
    partial void OnModifiedByChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnDeletedByChanging(System.Nullable<long> value);
    partial void OnDeletedByChanged();
    partial void OnIsActiveChanging(System.Nullable<short> value);
    partial void OnIsActiveChanged();
    partial void OnAllowLaneAutomationChanging(System.Nullable<bool> value);
    partial void OnAllowLaneAutomationChanged();
    partial void OnAllowMAAChanging(System.Nullable<bool> value);
    partial void OnAllowMAAChanged();
    #endregion
		
		public Organisation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Organisation", Storage="_Organisation1", DbType="VarChar(50)")]
		public string Organisation1
		{
			get
			{
				return this._Organisation1;
			}
			set
			{
				if ((this._Organisation1 != value))
				{
					this.OnOrganisation1Changing(value);
					this.SendPropertyChanging();
					this._Organisation1 = value;
					this.SendPropertyChanged("Organisation1");
					this.OnOrganisation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="VarChar(10)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(500)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCMID", DbType="BigInt")]
		public System.Nullable<long> CCMID
		{
			get
			{
				return this._CCMID;
			}
			set
			{
				if ((this._CCMID != value))
				{
					this.OnCCMIDChanging(value);
					this.SendPropertyChanging();
					this._CCMID = value;
					this.SendPropertyChanged("CCMID");
					this.OnCCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHASIWebsiteDealerID", DbType="BigInt")]
		public System.Nullable<long> RHASIWebsiteDealerID
		{
			get
			{
				return this._RHASIWebsiteDealerID;
			}
			set
			{
				if ((this._RHASIWebsiteDealerID != value))
				{
					this.OnRHASIWebsiteDealerIDChanging(value);
					this.SendPropertyChanging();
					this._RHASIWebsiteDealerID = value;
					this.SendPropertyChanged("RHASIWebsiteDealerID");
					this.OnRHASIWebsiteDealerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="SmallInt")]
		public System.Nullable<short> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowLaneAutomation", DbType="Bit")]
		public System.Nullable<bool> AllowLaneAutomation
		{
			get
			{
				return this._AllowLaneAutomation;
			}
			set
			{
				if ((this._AllowLaneAutomation != value))
				{
					this.OnAllowLaneAutomationChanging(value);
					this.SendPropertyChanging();
					this._AllowLaneAutomation = value;
					this.SendPropertyChanged("AllowLaneAutomation");
					this.OnAllowLaneAutomationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMAA", DbType="Bit")]
		public System.Nullable<bool> AllowMAA
		{
			get
			{
				return this._AllowMAA;
			}
			set
			{
				if ((this._AllowMAA != value))
				{
					this.OnAllowMAAChanging(value);
					this.SendPropertyChanging();
					this._AllowMAA = value;
					this.SendPropertyChanged("AllowMAA");
					this.OnAllowMAAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetOrganisationResult
	{
		
		private short _OrgId;
		
		private string _OrgName;
		
		public GetOrganisationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgId", DbType="SmallInt NOT NULL")]
		public short OrgId
		{
			get
			{
				return this._OrgId;
			}
			set
			{
				if ((this._OrgId != value))
				{
					this._OrgId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="VarChar(63) NOT NULL", CanBeNull=false)]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this._OrgName = value;
				}
			}
		}
	}
	
	public partial class Buyer_DirectBuyerListResult
	{
		
		private long _BuyerId;
		
		private string _BuyerName;
		
		public Buyer_DirectBuyerListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerId", DbType="BigInt NOT NULL")]
		public long BuyerId
		{
			get
			{
				return this._BuyerId;
			}
			set
			{
				if ((this._BuyerId != value))
				{
					this._BuyerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerName", DbType="NVarChar(154) NOT NULL", CanBeNull=false)]
		public string BuyerName
		{
			get
			{
				return this._BuyerName;
			}
			set
			{
				if ((this._BuyerName != value))
				{
					this._BuyerName = value;
				}
			}
		}
	}
	
	public partial class BuyerCode_CheckAvailabilityResult
	{
		
		private System.Nullable<int> _Total;
		
		public BuyerCode_CheckAvailabilityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class GetAssociatedRightsWithGroupResult
	{
		
		private long _SecurityGroupRightId;
		
		private long _SecurityRightID;
		
		private string _RightName;
		
		private string _RightDesc;
		
		private long _SecurityGroupId;
		
		public GetAssociatedRightsWithGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupRightId", DbType="BigInt NOT NULL")]
		public long SecurityGroupRightId
		{
			get
			{
				return this._SecurityGroupRightId;
			}
			set
			{
				if ((this._SecurityGroupRightId != value))
				{
					this._SecurityGroupRightId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRightID", DbType="BigInt NOT NULL")]
		public long SecurityRightID
		{
			get
			{
				return this._SecurityRightID;
			}
			set
			{
				if ((this._SecurityRightID != value))
				{
					this._SecurityRightID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RightName
		{
			get
			{
				return this._RightName;
			}
			set
			{
				if ((this._RightName != value))
				{
					this._RightName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightDesc", DbType="NVarChar(255)")]
		public string RightDesc
		{
			get
			{
				return this._RightDesc;
			}
			set
			{
				if ((this._RightDesc != value))
				{
					this._RightDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupId", DbType="BigInt NOT NULL")]
		public long SecurityGroupId
		{
			get
			{
				return this._SecurityGroupId;
			}
			set
			{
				if ((this._SecurityGroupId != value))
				{
					this._SecurityGroupId = value;
				}
			}
		}
	}
	
	public partial class GetCountryListResult
	{
		
		private int _CountryId;
		
		private string _CountryName;
		
		public GetCountryListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class GetStatesResult
	{
		
		private int _StateId;
		
		private string _State;
		
		public GetStatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
	}
	
	public partial class GetMakeListResult
	{
		
		private int _MakeId;
		
		private string _VINDivisionName;
		
		public GetMakeListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakeId", DbType="Int NOT NULL")]
		public int MakeId
		{
			get
			{
				return this._MakeId;
			}
			set
			{
				if ((this._MakeId != value))
				{
					this._MakeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VINDivisionName", DbType="VarChar(8000)")]
		public string VINDivisionName
		{
			get
			{
				return this._VINDivisionName;
			}
			set
			{
				if ((this._VINDivisionName != value))
				{
					this._VINDivisionName = value;
				}
			}
		}
	}
	
	public partial class GetMakeInYearRangeResult
	{
		
		private int _MakeID;
		
		private string _Make;
		
		public GetMakeInYearRangeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakeID", DbType="Int NOT NULL")]
		public int MakeID
		{
			get
			{
				return this._MakeID;
			}
			set
			{
				if ((this._MakeID != value))
				{
					this._MakeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="VarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this._Make = value;
				}
			}
		}
	}
	
	public partial class SuperAdminLoginResult
	{
		
		private long _SecurityUserId;
		
		private System.Nullable<long> _EntityID;
		
		private string _DisplayName;
		
		private System.Nullable<int> _EntityTypeID;
		
		private System.Nullable<short> _OrgID;
		
		private string _OrgCode;
		
		private string _Organisation;
		
		public SuperAdminLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityUserId", DbType="BigInt NOT NULL")]
		public long SecurityUserId
		{
			get
			{
				return this._SecurityUserId;
			}
			set
			{
				if ((this._SecurityUserId != value))
				{
					this._SecurityUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="BigInt")]
		public System.Nullable<long> EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this._EntityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int")]
		public System.Nullable<int> EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this._EntityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this._OrgID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="VarChar(10)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this._OrgCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation", DbType="VarChar(50)")]
		public string Organisation
		{
			get
			{
				return this._Organisation;
			}
			set
			{
				if ((this._Organisation != value))
				{
					this._Organisation = value;
				}
			}
		}
	}
	
	public partial class SuperAdminLoginWithIPResult
	{
		
		private long _SecurityUserId;
		
		private System.Nullable<long> _EntityID;
		
		private string _DisplayName;
		
		private System.Nullable<int> _EntityTypeID;
		
		private System.Nullable<short> _OrgID;
		
		private string _OrgCode;
		
		private string _Organisation;
		
		public SuperAdminLoginWithIPResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityUserId", DbType="BigInt NOT NULL")]
		public long SecurityUserId
		{
			get
			{
				return this._SecurityUserId;
			}
			set
			{
				if ((this._SecurityUserId != value))
				{
					this._SecurityUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="BigInt")]
		public System.Nullable<long> EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this._EntityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int")]
		public System.Nullable<int> EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this._EntityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this._OrgID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="VarChar(10)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this._OrgCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation", DbType="VarChar(50)")]
		public string Organisation
		{
			get
			{
				return this._Organisation;
			}
			set
			{
				if ((this._Organisation != value))
				{
					this._Organisation = value;
				}
			}
		}
	}
	
	public partial class Permission_ByUserIDResult
	{
		
		private string _Permission;
		
		public Permission_ByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="VarChar(2000)")]
		public string Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this._Permission = value;
				}
			}
		}
	}
	
	public partial class User_GetIPRestrictionResult
	{
		
		private bool _IPRestriction;
		
		public User_GetIPRestrictionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPRestriction", DbType="Bit NOT NULL")]
		public bool IPRestriction
		{
			get
			{
				return this._IPRestriction;
			}
			set
			{
				if ((this._IPRestriction != value))
				{
					this._IPRestriction = value;
				}
			}
		}
	}
	
	public partial class Email_PasswordResult
	{
		
		private string _Email;
		
		private string _Password;
		
		public Email_PasswordResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
	}
	
	public partial class GetTitlesResult
	{
		
		private int _TitleId;
		
		private string _Title;
		
		public GetTitlesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleId", DbType="Int NOT NULL")]
		public int TitleId
		{
			get
			{
				return this._TitleId;
			}
			set
			{
				if ((this._TitleId != value))
				{
					this._TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	public partial class GetEmployeeListResult
	{
		
		private long _EmployeeId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _EmployeeCode;
		
		private System.Nullable<int> _EmployeeTypeId;
		
		private int _IsActive;
		
		private string _Title;
		
		private string _EmployeeType;
		
		public GetEmployeeListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="BigInt NOT NULL")]
		public long EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this._EmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this._EmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeId", DbType="Int")]
		public System.Nullable<int> EmployeeTypeId
		{
			get
			{
				return this._EmployeeTypeId;
			}
			set
			{
				if ((this._EmployeeTypeId != value))
				{
					this._EmployeeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeType", DbType="NVarChar(50)")]
		public string EmployeeType
		{
			get
			{
				return this._EmployeeType;
			}
			set
			{
				if ((this._EmployeeType != value))
				{
					this._EmployeeType = value;
				}
			}
		}
	}
	
	public partial class SecurityGroupInsertResult
	{
		
		private System.Nullable<int> _Column1;
		
		public SecurityGroupInsertResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class IPUser_PermissionSelectResult
	{
		
		private string _IPAddress;
		
		private string _IPType;
		
		private string _IPRestriction;
		
		public IPUser_PermissionSelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(MAX)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPType", DbType="VarChar(5)")]
		public string IPType
		{
			get
			{
				return this._IPType;
			}
			set
			{
				if ((this._IPType != value))
				{
					this._IPType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPRestriction", DbType="VarChar(5)")]
		public string IPRestriction
		{
			get
			{
				return this._IPRestriction;
			}
			set
			{
				if ((this._IPRestriction != value))
				{
					this._IPRestriction = value;
				}
			}
		}
	}
	
	public partial class UpdateUserSettingsResult
	{
		
		private System.Nullable<long> _Column1;
		
		public UpdateUserSettingsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="BigInt")]
		public System.Nullable<long> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetAssociatedGroupsWithUserResult
	{
		
		private string _GroupName;
		
		private string _GroupDesc;
		
		private int _SecurityUserGroupId;
		
		public GetAssociatedGroupsWithUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDesc", DbType="NVarChar(255)")]
		public string GroupDesc
		{
			get
			{
				return this._GroupDesc;
			}
			set
			{
				if ((this._GroupDesc != value))
				{
					this._GroupDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityUserGroupId", DbType="Int NOT NULL")]
		public int SecurityUserGroupId
		{
			get
			{
				return this._SecurityUserGroupId;
			}
			set
			{
				if ((this._SecurityUserGroupId != value))
				{
					this._SecurityUserGroupId = value;
				}
			}
		}
	}
	
	public partial class spEntity5in1Result
	{
		
		private long _EntityId;
		
		private string _EntityName;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		public spEntity5in1Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="BigInt NOT NULL")]
		public long EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this._EntityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityName", DbType="NVarChar(50)")]
		public string EntityName
		{
			get
			{
				return this._EntityName;
			}
			set
			{
				if ((this._EntityName != value))
				{
					this._EntityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
	}
	
	public partial class Admin_CheckUserNameExistanceResult
	{
		
		private System.Nullable<bool> _Column1;
		
		public Admin_CheckUserNameExistanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Bit")]
		public System.Nullable<bool> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class SelectAllLookupTablesResult
	{
		
		private long _LookupTableId;
		
		private string _ShowColumns;
		
		private string _TableName;
		
		private System.Nullable<bool> _IsReadWrite;
		
		public SelectAllLookupTablesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupTableId", DbType="BigInt NOT NULL")]
		public long LookupTableId
		{
			get
			{
				return this._LookupTableId;
			}
			set
			{
				if ((this._LookupTableId != value))
				{
					this._LookupTableId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowColumns", DbType="VarChar(100)")]
		public string ShowColumns
		{
			get
			{
				return this._ShowColumns;
			}
			set
			{
				if ((this._ShowColumns != value))
				{
					this._ShowColumns = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(100)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadWrite", DbType="Bit")]
		public System.Nullable<bool> IsReadWrite
		{
			get
			{
				return this._IsReadWrite;
			}
			set
			{
				if ((this._IsReadWrite != value))
				{
					this._IsReadWrite = value;
				}
			}
		}
	}
	
	public partial class BuyerListSearchResult
	{
		
		private long _BuyerId;
		
		private string _BuyerName;
		
		private string _Commission;
		
		private string _PaymentTerm;
		
		private string _Phone1;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _CountryName;
		
		private string _CityStateZip;
		
		public BuyerListSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerId", DbType="BigInt NOT NULL")]
		public long BuyerId
		{
			get
			{
				return this._BuyerId;
			}
			set
			{
				if ((this._BuyerId != value))
				{
					this._BuyerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerName", DbType="NVarChar(152) NOT NULL", CanBeNull=false)]
		public string BuyerName
		{
			get
			{
				return this._BuyerName;
			}
			set
			{
				if ((this._BuyerName != value))
				{
					this._BuyerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commission", DbType="VarChar(50)")]
		public string Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this._Commission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTerm", DbType="NVarChar(50)")]
		public string PaymentTerm
		{
			get
			{
				return this._PaymentTerm;
			}
			set
			{
				if ((this._PaymentTerm != value))
				{
					this._PaymentTerm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(50)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this._Phone1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZip", DbType="NVarChar(154)")]
		public string CityStateZip
		{
			get
			{
				return this._CityStateZip;
			}
			set
			{
				if ((this._CityStateZip != value))
				{
					this._CityStateZip = value;
				}
			}
		}
	}
	
	public partial class VendorSearchListResult
	{
		
		private long _VendorId;
		
		private string _VendorName;
		
		private string _VendorDIN;
		
		private string _Category;
		
		private string _Type;
		
		private string _Phone1;
		
		private string _CityStateZip;
		
		private string _CountryName;
		
		public VendorSearchListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorId", DbType="BigInt NOT NULL")]
		public long VendorId
		{
			get
			{
				return this._VendorId;
			}
			set
			{
				if ((this._VendorId != value))
				{
					this._VendorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorDIN", DbType="NVarChar(50)")]
		public string VendorDIN
		{
			get
			{
				return this._VendorDIN;
			}
			set
			{
				if ((this._VendorDIN != value))
				{
					this._VendorDIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(50)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this._Phone1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZip", DbType="NVarChar(153)")]
		public string CityStateZip
		{
			get
			{
				return this._CityStateZip;
			}
			set
			{
				if ((this._CityStateZip != value))
				{
					this._CityStateZip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class Organisation_CountAllEmployeesResult
	{
		
		private System.Nullable<int> _Customer;
		
		private System.Nullable<int> _Buyer;
		
		private System.Nullable<int> _Vendor;
		
		private System.Nullable<int> _Utility_Company;
		
		private System.Nullable<int> _Employee;
		
		public Organisation_CountAllEmployeesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="Int")]
		public System.Nullable<int> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buyer", DbType="Int")]
		public System.Nullable<int> Buyer
		{
			get
			{
				return this._Buyer;
			}
			set
			{
				if ((this._Buyer != value))
				{
					this._Buyer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor", DbType="Int")]
		public System.Nullable<int> Vendor
		{
			get
			{
				return this._Vendor;
			}
			set
			{
				if ((this._Vendor != value))
				{
					this._Vendor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Utility Company]", Storage="_Utility_Company", DbType="Int")]
		public System.Nullable<int> Utility_Company
		{
			get
			{
				return this._Utility_Company;
			}
			set
			{
				if ((this._Utility_Company != value))
				{
					this._Utility_Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="Int")]
		public System.Nullable<int> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this._Employee = value;
				}
			}
		}
	}
	
	public partial class Admin_GetLeftPanelValueResult
	{
		
		private System.Nullable<int> _ActiveUsers;
		
		private System.Nullable<int> _ActiveOrganisations;
		
		private System.Nullable<int> _ActiveSystems;
		
		public Admin_GetLeftPanelValueResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveUsers", DbType="Int")]
		public System.Nullable<int> ActiveUsers
		{
			get
			{
				return this._ActiveUsers;
			}
			set
			{
				if ((this._ActiveUsers != value))
				{
					this._ActiveUsers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveOrganisations", DbType="Int")]
		public System.Nullable<int> ActiveOrganisations
		{
			get
			{
				return this._ActiveOrganisations;
			}
			set
			{
				if ((this._ActiveOrganisations != value))
				{
					this._ActiveOrganisations = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveSystems", DbType="Int")]
		public System.Nullable<int> ActiveSystems
		{
			get
			{
				return this._ActiveSystems;
			}
			set
			{
				if ((this._ActiveSystems != value))
				{
					this._ActiveSystems = value;
				}
			}
		}
	}
	
	public partial class Organisation_SearchResult
	{
		
		private short _OrganisationID;
		
		private string _OrgName;
		
		private string _OrgCode;
		
		private string _Organisation;
		
		private string _Website;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<long> _CCMID;
		
		private System.Nullable<long> _RHASIWebsiteDealerID;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<short> _Active;
		
		private string _AddedBy;
		
		public Organisation_SearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationID", DbType="SmallInt NOT NULL")]
		public short OrganisationID
		{
			get
			{
				return this._OrganisationID;
			}
			set
			{
				if ((this._OrganisationID != value))
				{
					this._OrganisationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="VarChar(50)")]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this._OrgName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="VarChar(10)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this._OrgCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation", DbType="VarChar(50)")]
		public string Organisation
		{
			get
			{
				return this._Organisation;
			}
			set
			{
				if ((this._Organisation != value))
				{
					this._Organisation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(500)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this._Website = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCMID", DbType="BigInt")]
		public System.Nullable<long> CCMID
		{
			get
			{
				return this._CCMID;
			}
			set
			{
				if ((this._CCMID != value))
				{
					this._CCMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RHASIWebsiteDealerID", DbType="BigInt")]
		public System.Nullable<long> RHASIWebsiteDealerID
		{
			get
			{
				return this._RHASIWebsiteDealerID;
			}
			set
			{
				if ((this._RHASIWebsiteDealerID != value))
				{
					this._RHASIWebsiteDealerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="SmallInt")]
		public System.Nullable<short> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(50)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
	}
	
	public partial class GetAllUserInfoResult
	{
		
		private long _EmployeeID;
		
		private string _UserNameDisplay;
		
		private string _UserName;
		
		private string _DisplayName;
		
		private string _UserNote;
		
		private int _IsActive;
		
		private string _UserPassword;
		
		private string _EntityType;
		
		private string _Permission;
		
		private System.Nullable<long> _EntityID;
		
		private System.Nullable<int> _EntityTypeID;
		
		private System.Nullable<long> _ContactId;
		
		private string _OrgCode;
		
		public GetAllUserInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="BigInt NOT NULL")]
		public long EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNameDisplay", DbType="NVarChar(102)")]
		public string UserNameDisplay
		{
			get
			{
				return this._UserNameDisplay;
			}
			set
			{
				if ((this._UserNameDisplay != value))
				{
					this._UserNameDisplay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNote", DbType="NVarChar(255)")]
		public string UserNote
		{
			get
			{
				return this._UserNote;
			}
			set
			{
				if ((this._UserNote != value))
				{
					this._UserNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this._UserPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="VarChar(20)")]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this._EntityType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="VarChar(2000)")]
		public string Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this._Permission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="BigInt")]
		public System.Nullable<long> EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this._EntityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int")]
		public System.Nullable<int> EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this._EntityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="BigInt")]
		public System.Nullable<long> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this._ContactId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="VarChar(10)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this._OrgCode = value;
				}
			}
		}
	}
	
	public partial class Admin_GetUserInfoResult
	{
		
		private long _SecurityUserID;
		
		private System.Nullable<int> _EntityTypeID;
		
		private System.Nullable<long> _EntityID;
		
		private string _UserName;
		
		private string _UserPassword;
		
		private string _DisplayName;
		
		private string _UserNote;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<long> _AddedBy;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<long> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<long> _DeletedBy;
		
		private int _IsActive;
		
		private System.Nullable<long> _ContactId;
		
		private System.Nullable<bool> _IPRestriction;
		
		private System.Nullable<short> _OrgID;
		
		private System.Nullable<bool> _IsSuperAdmin;
		
		private string _OrgDisplayName;
		
		private string _ENTITY_TYPE;
		
		public Admin_GetUserInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityUserID", DbType="BigInt NOT NULL")]
		public long SecurityUserID
		{
			get
			{
				return this._SecurityUserID;
			}
			set
			{
				if ((this._SecurityUserID != value))
				{
					this._SecurityUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int")]
		public System.Nullable<int> EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this._EntityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="BigInt")]
		public System.Nullable<long> EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this._EntityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this._UserPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNote", DbType="NVarChar(255)")]
		public string UserNote
		{
			get
			{
				return this._UserNote;
			}
			set
			{
				if ((this._UserNote != value))
				{
					this._UserNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="BigInt")]
		public System.Nullable<long> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this._DateModified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt")]
		public System.Nullable<long> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this._DateDeleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="BigInt")]
		public System.Nullable<long> DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this._DeletedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="BigInt")]
		public System.Nullable<long> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this._ContactId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPRestriction", DbType="Bit")]
		public System.Nullable<bool> IPRestriction
		{
			get
			{
				return this._IPRestriction;
			}
			set
			{
				if ((this._IPRestriction != value))
				{
					this._IPRestriction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="SmallInt")]
		public System.Nullable<short> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this._OrgID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperAdmin", DbType="Bit")]
		public System.Nullable<bool> IsSuperAdmin
		{
			get
			{
				return this._IsSuperAdmin;
			}
			set
			{
				if ((this._IsSuperAdmin != value))
				{
					this._IsSuperAdmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgDisplayName", DbType="VarChar(62)")]
		public string OrgDisplayName
		{
			get
			{
				return this._OrgDisplayName;
			}
			set
			{
				if ((this._OrgDisplayName != value))
				{
					this._OrgDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENTITY_TYPE", DbType="NVarChar(50)")]
		public string ENTITY_TYPE
		{
			get
			{
				return this._ENTITY_TYPE;
			}
			set
			{
				if ((this._ENTITY_TYPE != value))
				{
					this._ENTITY_TYPE = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
